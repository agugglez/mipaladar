<Window x:Class="MiPaladar.Views.ValeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"              
               
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"                         
             
             xmlns:models="clr-namespace:MiPaladar.ViewModels"
                          
             xmlns:mycontrols="clr-namespace:MiPaladar.MyControls"
             xmlns:views="clr-namespace:MiPaladar.Views"
             xmlns:local="clr-namespace:MiPaladar.SampleData"
             xmlns:stuff="clr-namespace:MiPaladar.Stuff"
             
             mc:Ignorable="d"
             Height="625" Width="550" 
        
        Title="{Binding Number,StringFormat=Vale {0}}" UseLayoutRounding="True"
             
             DataContextChanged="UserControl_DataContextChanged">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>                
                <ResourceDictionary Source="/resources/MergedResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--<stuff:DeferredBinder x:Key="discountValue" 
                              Target="{Binding Discount, Mode=TwoWay}" />
            <stuff:DeferredBinder x:Key="cashValue" 
                              Target="{Binding Cash, Mode=TwoWay}" />-->

            <CollectionViewSource x:Key="cvsPriceLists" Source="{Binding PriceLists}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Name" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <CollectionViewSource x:Key="cvsTables" Source="{Binding Tables}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Number" />
                </CollectionViewSource.SortDescriptions>
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="PriceList"/>
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>

            <CollectionViewSource x:Key="cvsProductsForSale" Source="{Binding VentaItems}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Name" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <CollectionViewSource x:Key="cvsKitchenItems" Source="{Binding OrderItems}"
                                  Filter="KitchenProductsFilter">
                
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Product.IsEntrant" Direction="Descending" />
                </CollectionViewSource.SortDescriptions>
                
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="Product.ProductionArea.Name"/>
                </CollectionViewSource.GroupDescriptions>                
                
            </CollectionViewSource>
        </ResourceDictionary>

    </Window.Resources>

    <Grid d:DataContext="{d:DesignData /SampleData/SampleSaleData.xaml}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        
        <StackPanel Grid.RowSpan="5">
            
            <Button Content="Marchar" Command="{Binding PrintProductionCommand}"
                    ToolTip="Imprimir vale de concina"/>            
            <!--<Button Content="Descuento" />-->
            <Button Content="Imprimir" Command="{Binding PrintCommand}"
                    ToolTip="Imprimir cuenta para entregar al cliente"/>
            <Button Content="Cobrar" Command="{Binding ShowChargeDialogCommand}"/>            
            <Button Content="{Binding OpenOrCloseContent}" Command="{Binding ToggleCloseCommand}"/>
            <!--<Button Content="Notas" Command="{Binding ToggleNotesVisibility}"/>-->

            <Button Content="Eliminar" Command="{Binding RemoveCommand}"
                    Visibility="{Binding AppVM.LoggedInUser.Role.CanRemoveSales,Converter={StaticResource btvConverter}}"/>

            <!--<Button Content="Imp. Doc" Command="{Binding PrintDocumentCommand}"/>-->
            
            <StackPanel>
                <TextBlock Text="Descuento:" />

                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Text="{Binding Discount, StringFormat=f2}"
                             stuff:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                             IsReadOnly="{Binding Closed}" MinWidth="50"
                             Grid.Row="0"  Grid.RowSpan="2"/>

                    <RadioButton Content="%" IsChecked="{Binding DiscountInPercent}"
                                 Grid.Row="1" Grid.Column="2" Margin="2,0"/>
                    <RadioButton Content="$" Margin="2,0"
                                 Grid.Row="0" Grid.Column="2"
                                 IsChecked="{Binding Mode=OneWay,Path=DiscountInMoney}"/>
                </Grid>

            </StackPanel>

            <StackPanel>
                <TextBlock Text="Recargo:" />

                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Text="{Binding Tax, StringFormat=f2}"
                             stuff:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                             IsReadOnly="{Binding Closed}" MinWidth="50"
                             Grid.Row="0"  Grid.RowSpan="2"/>

                    <RadioButton Content="%" IsChecked="{Binding TaxInPercent}"
                                 Grid.Row="1" Grid.Column="2" Margin="2,0"/>
                    <RadioButton Content="$" Margin="2,0"
                                 Grid.Row="0" Grid.Column="2"
                                 IsChecked="{Binding Mode=OneWay,Path=TaxInMoney}"/>
                </Grid>

            </StackPanel>

        </StackPanel>

        <!--Vale Header-->
        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition />
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            
            

            <TextBlock Text="Vale" Grid.Row="0" Grid.Column="0"/>
            <TextBox Grid.Row="0" Grid.Column="1" IsReadOnly="{Binding Closed}"
                     >
                <!--Validation.ErrorTemplate="{StaticResource validationTemplate}"-->
                <TextBox.Text>
                    <Binding Path="Number" UpdateSourceTrigger="PropertyChanged">
                        <!--<Binding.ValidationRules>
                        <validation:ValeIDValidationRule/>
                    </Binding.ValidationRules>-->
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock Text="Dep." Grid.Row="2" Grid.Column="2" />
            <!--<TextBox Text="Todavia no" Width="50" Margin="5"/>-->
            <ComboBox Grid.Row="2" Grid.Column="3"
                      DisplayMemberPath="Name"      
                      SelectedItem="{Binding Waiter}" IsSynchronizedWithCurrentItem="False"
                      ItemsSource="{Binding Waiters}"                              
                      IsEnabled="{Binding Opened}"/>

            <!--<TextBlock Text="Centro" Grid.Row="0" Grid.Column="4" Style="{StaticResource valeTB}"/>                
        <ComboBox Margin="5" Grid.Row="0" Grid.Column="5" Width="80" HorizontalAlignment="Left"
                        SelectedItem="{Binding PuntoDeVenta}" DisplayMemberPath="Name"
                        ItemsSource="{Binding Source={x:Static Application.Current}, Path=PtsVenta}"                              
                        IsEnabled="{Binding Opened}"/>-->



            <!--<TextBlock Text="Imp." Grid.Row="0" Grid.Column="4" Style="{StaticResource tbRight}"/>
        <TextBlock Text="{Binding Prints}" Grid.Row="0" Grid.Column="5" Margin="5"
                    VerticalAlignment="Center" FontWeight="Bold"/>-->

            <TextBlock Text="Area" Grid.Row="1" Grid.Column="2" />
            <!--<TextBox Text="Todavia no" Width="50" Margin="5"/>-->
            <TextBlock Grid.Row="1" Grid.Column="3" Text="{Binding Table.PriceList.Name}" FontWeight="Bold"/>
            <!--<ComboBox Margin="5" Grid.Row="0" Grid.Column="3" HorizontalAlignment="Left"
                    DisplayMemberPath="Name" IsEnabled="{Binding Opened}"
                    ItemsSource="{Binding Source={StaticResource cvsPriceLists}}"
                    SelectedItem="{Binding PriceList}" IsSynchronizedWithCurrentItem="False">-->
            <!--Validation.ErrorTemplate="{StaticResource validationTemplate}"
        <ComboBox.SelectedItem>
            <Binding Path="ListaPrecio" UpdateSourceTrigger="PropertyChanged">
                        
            </Binding>
        </ComboBox.SelectedItem>-->
            <!--</ComboBox>-->

            <TextBlock Text="Mesa" Grid.Row="1"  />
            <!--<TextBlock Margin="5" Grid.Column="5" 
                    Text="{Binding Table, Converter={StaticResource tableFormatter}}"
                    VerticalAlignment="Center" FontWeight="Bold"/>-->
            <ComboBox Grid.Row="1"  Grid.Column="1" 
                      SelectedItem="{Binding Table}"
                      ItemsSource="{Binding Source={StaticResource cvsTables}}" 
                      IsSynchronizedWithCurrentItem="False"
                      IsEnabled="{Binding Opened}" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource tableFormatter}">
                                <Binding Path="IsBar"/>
                                <Binding Path="Number"/>
                                <Binding Path="Description"/>
                            </MultiBinding>
                        </TextBlock.Text>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ComboBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock FontWeight="Bold" Text="{Binding Path=Name.Name}"/>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ComboBox.GroupStyle>
            </ComboBox>

            <TextBlock Text="Personas" Grid.Row="2" Grid.Column="0" />
            <TextBox Text="{Binding Persons, UpdateSourceTrigger=PropertyChanged}"
                     IsReadOnly="{Binding Closed}"
                     Grid.Row="2" Grid.Column="1"/>

            <!--<TextBlock Grid.Row="0" Grid.Column="4" Margin="5" HorizontalAlignment="Right">                        
                <TextBox Text="{Binding Day}" Style="{StaticResource formTB}" />
                <TextBlock Text="/" FontSize="16"/>
                <TextBox Text="{Binding Month}" Style="{StaticResource formTB}" />
                <TextBlock Text="/" FontSize="16"/>
                <TextBox Text="{Binding Year}" Style="{StaticResource formTB}" />
            </TextBlock>-->

            <!--<Button Content="Cobrar" Command="{Binding ToggleChargingCmd}"
                Grid.Column="6" Margin="5"/>-->

            <!--<Menu Grid.Row="2" Grid.ColumnSpan="2" 
                  HorizontalAlignment="Left">
                <MenuItem Header="opciones ▼" >
                    <MenuItem Header="Imprimir" Command="{Binding PrintCommand}"/>
                    <MenuItem Header="Marchar" Command="{Binding PrintProductionCommand}"/>
                    <MenuItem Header="{Binding OpenOrCloseContent}" Command="{Binding ToggleCloseCommand}"/>
                    <MenuItem Header="Cobrar" Command="{Binding ToggleChargeDialogVisibility}"/>
                    <MenuItem Header="Notas" Command="{Binding ToggleNotesVisibility}"/>
                </MenuItem>
            </Menu>-->

            <!--<TextBlock Text="Turno" Grid.Row="3"/>
            <TextBlock Text="{Binding WorkSession.Shift.Name}" 
                       FontWeight="Bold"
                       Grid.Row="3" Grid.Column="1"/>-->

        </Grid>

        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <!--<Grid.Background>
            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Color="White" Offset="0.0"/>
                <GradientStop Color="LightBlue" Offset="0.5"/>
                <GradientStop Color="White" Offset="1.0"/>
            </LinearGradientBrush>
        </Grid.Background>-->
            <!--<Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>                    
        </Grid.RowDefinitions>-->
            
            <StackPanel Orientation="Horizontal">
                <RadioButton Name="rbTable" IsChecked="True"
                             GroupName="viewMode">Vale de Mesa</RadioButton>
                <RadioButton Name="rbKitchen" 
                             GroupName="viewMode">Vale de Cocina</RadioButton>
            </StackPanel>

            <DataGrid AutoGenerateColumns="False" GridLinesVisibility="None" HeadersVisibility="None"
                      ItemsSource="{Binding Source={StaticResource cvsKitchenItems}}" SelectionMode="Single"
                      Grid.Row="1" IsReadOnly="True"                      
                      Visibility="{Binding ElementName=rbKitchen, Path=IsChecked,Converter={StaticResource btvConverter}}">                

                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu >
                                    <MenuItem Header="Marchar de nuevo" 
                                              Command="{Binding ClearPrintedCommand}" />
                                    <MenuItem Header="Entrante" 
                                              IsCheckable="True" IsChecked="{Binding IsEntrant}" />
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    <DataGridTemplateColumn >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Visibility="{Binding Printed, Converter={StaticResource btvConverter}}"
                                       Source="/Images/Print.png" Height="16" Width="16"
                                       RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid Visibility="{Binding IsEntrant,Converter={StaticResource btvConverter}}">
                                    <Ellipse Stroke="Black" StrokeThickness="1" Stretch="Uniform" Height="17.5"/>
                                    <TextBlock Text="E" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <DataGridTextColumn Binding="{Binding Quantity}" />
                    
                    <DataGridTextColumn Binding="{Binding Product.Name}" IsReadOnly="True"/>
                    <!--<DataGridCheckBoxColumn Header="Entrante" Binding="{Binding Product.IsEntrant}" IsThreeState="False"/>-->

                </DataGrid.Columns>

                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">

                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="auto"/>
                                                </Grid.RowDefinitions>

                                                <TextBlock Margin="5,2" Text="{Binding Name}" FontWeight="Bold"/>
                                                <TextBlock Margin="5,2" HorizontalAlignment="Right"
                                                           Text="{Binding DataContext.WorkingDate,StringFormat=ddd d /MMM,
                                                RelativeSource={RelativeSource AncestorType=DataGrid}}" />

                                                <ItemsPresenter Grid.Row="1"/>

                                                <TextBlock Margin="5,2" FontSize="18"
                                                           Grid.Row="1" HorizontalAlignment="Right" 
                                                           Text="{Binding DataContext.Number,
                                                    RelativeSource={RelativeSource AncestorType=DataGrid}}" />

                                                <Line Grid.Row="2" Grid.ColumnSpan="2" Margin="0,10"
                                                      Stroke="Black" StrokeThickness="1" StrokeDashArray="2,1"
                                                      Stretch="Fill" X2="1" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </DataGrid.GroupStyle>
            </DataGrid>

            <!--Valeitems-->
            <DataGrid Grid.Row="1" AutoGenerateColumns="False" CanUserAddRows="False"
                      ItemsSource="{Binding OrderItems}"
                      IsReadOnly="{Binding Closed}"
                      SelectedItem="{Binding SelectedLineItem}" SelectionMode="Single"
                      Visibility="{Binding ElementName=rbTable, Path=IsChecked,Converter={StaticResource btvConverter}}">                
                
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="ToolTip" Value="abcdec"/>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.InputBindings>
                    <KeyBinding Command="{Binding RemoveLineItemCommand}" Key="Del"/>
                </DataGrid.InputBindings>

                <!--<DataGrid.RowValidationRules>
                    <val:ProductQuantityItemValidationRule ValidationStep="UpdatedValue"/>
                </DataGrid.RowValidationRules>-->
                <!--Style="{DynamicResource DataGridStyle1}"-->
                <DataGrid.Columns>

                    <!--<DataGridTemplateColumn >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center"
                                           Visibility="{Binding ToSpecify,Converter={StaticResource btvConverter}}">
                                    <StackPanel>
                                        <TextBlock>
                                            <Hyperlink Command="{Binding ToggleSpecifyFormatPopupVisibilityCommand}">
                                                Especificar
                                            </Hyperlink>                            
                                        </TextBlock>
                                        <Popup StaysOpen="False" PopupAnimation="Fade" Placement="Bottom" 
                                               IsOpen="{Binding SpecifyFormatPopupVisible}" AllowsTransparency="True">
                                            <popups:SpecifyFormatsPopup Margin="10" Foreground="Black"/>
                                        </Popup>
                                    </StackPanel>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>-->

                    <!--<DataGridTemplateColumn >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Border Margin="2" Background="Red" CornerRadius="2">
                                        <TextBlock Text="Negativo" HorizontalAlignment="Center"
                                                   Foreground="White" Margin="4,1" FontWeight="DemiBold"/>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>-->
                    <DataGridTextColumn Header="Cantidad" Binding="{Binding Quantity}"/>
                    <!--<DataGridTextColumn Header="Cantidad" >
                        <DataGridTextColumn.Binding>
                            <MultiBinding Converter="{StaticResource qttyConverter}">
                                <Binding Path="Quantity"/>
                                <Binding Path="UnitMeasure"/>
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>-->

                    <!--<DataGridComboBoxColumn Header="Descripción" Width="*" 
                                        SelectedItemBinding="{Binding Product}" DisplayMemberPath="Name"
                                        SortMemberPath="Product.Name">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource"
                                    Value="{Binding Path=DataContext.VentaItems, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                            <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.VentaItems,
                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                            <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>-->
                    <DataGridTextColumn Header="Descripción" Width="*" Binding="{Binding Product.Name}"
                                    IsReadOnly="True"/>

                    <!--<DataGridTextColumn Header="Costo" Binding="{Binding Path=Cost, StringFormat=c}"
                                        IsReadOnly="True" />-->

                    <DataGridTextColumn Header="Precio" Binding="{Binding Path=Price, StringFormat=c}"                                             
                                    IsReadOnly="True" />

                </DataGrid.Columns>
            </DataGrid>

            <TextBlock Text="Cerrado" Visibility="{Binding Closed, Converter={StaticResource btvConverter}}" 
                       FontWeight="Bold" FontSize="56" Opacity="0.2" IsHitTestVisible="False"
                       HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5"
                       Grid.Row="1">
                <TextBlock.RenderTransform>
            	    <TransformGroup>
            		    <ScaleTransform/>
            		    <SkewTransform/>
            		    <RotateTransform Angle="-45"/>
            		    <TranslateTransform/>
            	    </TransformGroup>
                </TextBlock.RenderTransform>
                <!--<TextBlock.TextEffects>
                    
                <TextEffect PositionCount="7" x:Name="MyTextEffect">
                <TextEffect.Transform>
                    <RotateTransform x:Name="TextEffectRotateTransform" 
                    Angle="-40" CenterX="85" CenterY="30" />
                </TextEffect.Transform>
                </TextEffect>
            </TextBlock.TextEffects>-->
            </TextBlock>
        </Grid>

        <Grid Grid.Row="2" Grid.Column="1" Visibility="{Binding Opened,Converter={StaticResource btvConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <TextBox Name="tbQuantity" Margin="5" Width="50" 
                     KeyDown="tbQuantity_KeyDown" KeyUp="tbQuantity_KeyUp"
                     Text="{Binding QuantityToAdd}">
                <!--<TextBox.Text>
                    <MultiBinding Converter="{StaticResource qttyConverter}" 
                                          UpdateSourceTrigger="PropertyChanged">
                        <Binding Path="QuantityToAdd"/>
                        <Binding Path="UnitMeasureToAdd"/>
                    </MultiBinding>
                </TextBox.Text>-->
            </TextBox>

            <mycontrols:AutoCompleteFocusableBox x:Name="acbProduct" Grid.Column="1"
                                                 ItemsSource="{Binding Source={StaticResource cvsProductsForSale}}"
                                                 ValueMemberPath="Name"
                                                 FilterMode="ContainsOrdinal" IsTextCompletionEnabled="True"
                                                 SelectedItem="{Binding ProductToAdd,Mode=TwoWay}"
                                                 KeyUp="AutoCompleteBox_KeyUp">
                <mycontrols:AutoCompleteFocusableBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}"/>
                    </DataTemplate>
                </mycontrols:AutoCompleteFocusableBox.ItemTemplate>
                <!--<mycontrols:AutoCompleteFocusableBox.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightBlue"  />
                </mycontrols:AutoCompleteFocusableBox.Resources>-->
            </mycontrols:AutoCompleteFocusableBox>

            <Button Name="btnAdd" Grid.Column="2" Content="Añadir"
                Command="{Binding NewCommand}"/>
        </Grid>

        <!--TOTAL-->
        <Grid Grid.Row="3" Grid.Column="1">
            
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <!--<Menu Margin="10" HorizontalAlignment="Left" >
            <MenuItem Header="opciones" >
                <MenuItem Header="Abrir" Command="{Binding OpenCommand}"/>
                <MenuItem Header="Cerrar" Command="{Binding CloseSaleCommand}"/>
                <MenuItem Header="Cobrar" Command="{Binding ChargeCommand}"/>
            </MenuItem>
        </Menu>-->

            <!--DESCUENTO-->

            <!--<Rectangle Margin="5,2">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFC74D4D" Offset="0" />
                    <GradientStop Color="#FFA31F1F" Offset="1" />
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>-->
            <!--<Grid >
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="Descuento:" Grid.RowSpan="2" />

                <TextBox Text="{Binding Discount, UpdateSourceTrigger=PropertyChanged,StringFormat=f2}"
                         IsReadOnly="{Binding Closed}"
                         Grid.Row="0" Grid.Column="1" Grid.RowSpan="2"/>

                <RadioButton Content="%" IsChecked="{Binding DiscountInPercent}"
                             Grid.Row="1" Grid.Column="2" Margin="5,0"/>
                <RadioButton Content="$" Margin="5,0"
                             Grid.Row="0" Grid.Column="2"
                             IsChecked="{Binding Mode=OneWay,Path=DiscountInMoney}"/>
            </Grid>-->

            <Rectangle Margin="3" Style="{StaticResource TotalRectangle}"
                       Grid.Column="1" />

            <TextBlock Text="{Binding Path=TotalPrice, StringFormat=Total {0:c}}"
                       Style="{StaticResource TotalExpenses}" 
                       TextAlignment="Right" VerticalAlignment="Center"
                       Grid.Column="1"/>
        </Grid>

        <!--<Grid Grid.Row="4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Button Content="Imprimir"
                Command="{Binding PrintCommand}"/>
        <Button Grid.Column="1" Content="{Binding OpenOrCloseContent}" 
                Command="{Binding ToggleCloseCommand}"/>
        <Button Grid.Column="2" Command="{Binding ToggleChargeDialogVisibility}" >
            Cobrar
        </Button>

        <Button Command="{Binding ToggleNotesVisibility}" Grid.Column="3">
                
            <StackPanel>
                <TextBlock Text="Notas"/>
                <Popup Placement="Top" StaysOpen="False"
                        PopupAnimation="Fade" IsOpen="{Binding ShowingNotes}" 
                        AllowsTransparency="True" VerticalOffset="-10" >

                    <Grid Margin="0,0,10,10" Height="200" Width="200" >
                        <Grid.Effect>
                            <DropShadowEffect/>
                        </Grid.Effect>
                        <TextBox TextWrapping="Wrap" VerticalScrollBarVisibility="Auto"
                                    IsReadOnly="{Binding Closed}" AcceptsReturn="True" BorderThickness="0"
                                    Text="{Binding Notes, UpdateSourceTrigger=PropertyChanged}" 
                                    Background="#FFFCF9A3"/>
                    </Grid>

                </Popup>
            </StackPanel>
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="Width" Value="60"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasNotes}" Value="True" >
                            <Setter Property="Background" Value="#FFFCF9A3" />
                        </DataTrigger>
                    </Style.Triggers>

                </Style>
            </Button.Style>
        </Button>

    </Grid>-->

        <!--<views:ChargeDialog Grid.RowSpan="5" Grid.ColumnSpan="2"  Width="170" Height="210"  
                            VerticalAlignment="Center" HorizontalAlignment="Center"
                            Visibility="{Binding Charging, Converter={StaticResource btvConverter}}"/>-->

        <!--<views:NotesDialog Grid.RowSpan="5" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center"
                            Visibility="{Binding ShowingNotes, Converter={StaticResource btvConverter}}"/>-->

    </Grid>
</Window>
