<Window x:Class="MiPaladar.Views.PurchaseView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"              
             
        xmlns:mycontrols="clr-namespace:MiPaladar.MyControls"
        
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             
        mc:Ignorable="d" 
        
        Height="600" Width="450" 
        Title="{Binding Title,StringFormat=Compra {0}}" UseLayoutRounding="True">
    

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/resources/MergedResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <CollectionViewSource x:Key="cvsInventoryAreas" Source="{Binding InventoryAreas}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Name"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <CollectionViewSource x:Key="cvsPurchaseTypes" Source="{Binding PurchaseTypes}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Name" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <!--<CollectionViewSource x:Key="cvsEmployees" Source="{Binding Employees}">
        <CollectionViewSource.SortDescriptions>
            <scm:SortDescription PropertyName="Name" />
        </CollectionViewSource.SortDescriptions>
    </CollectionViewSource>-->

            <CollectionViewSource x:Key="cvsProductsForPurchase" Source="{Binding PurchasableProducts}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Name" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Rectangle Margin="5,5,5,0"/>
        <Grid Margin="5,5,5,0">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <!--<TextBlock Grid.Row="2" Grid.Column="2" Text="Tipo"/>
            <ComboBox Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="3" Margin="5" 
                      DisplayMemberPath="Name" IsEnabled="{Binding Opened}"
                      SelectedItem="{Binding PurchaseType}"                                          
                      ItemsSource="{Binding Source={StaticResource cvsPurchaseTypes}}"
                      IsSynchronizedWithCurrentItem="False"/>-->
            <!--<DockPanel Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3" >
                
                <Button Content="Editar" DockPanel.Dock="Right"/>

                <ListBox Margin="5" ItemsSource="{Binding PurchaseTagItems}"
                         DisplayMemberPath="PurchaseTag.Name"
                         ScrollViewer.HorizontalScrollBarVisibility="Hidden" >
                    
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>

            </DockPanel>-->
            

            <TextBlock Grid.Row="2" Text="Responsable"/>
            <ComboBox Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Width="150"
                      DisplayMemberPath="Name"
                      SelectedItem="{Binding Responsible}"                                          
                      ItemsSource="{Binding Employees}" 
                      IsSynchronizedWithCurrentItem="False"/>

            <!--<TextBlock Grid.Row="1" Text="Fecha"  />
            <TextBlock Grid.Row="1" Grid.Column="1" 
                       FontWeight="DemiBold" Text="{Binding Date,StringFormat=d}"/>-->

            <TextBlock Text="Fecha de Trabajo" />
            <DatePicker Grid.Column="1" SelectedDate="{Binding Date}"
                        HorizontalAlignment="Left"/>

            <Button Content="Eliminar" Grid.Column="1" HorizontalAlignment="Right"
                    Command="{Binding RemoveCommand}"
                    Visibility="{Binding AppVM.LoggedInUser.Role.CanRemovePurchases,Converter={StaticResource btvConverter}}"/>

            <TextBlock Text="Fecha de Creación" Grid.Row="1"/>
            <TextBlock Grid.Column="1" Grid.Row="1"
                       FontWeight="DemiBold" Text="{Binding DateCreated, StringFormat=ddd d MMM\, h:mm tt}"/>

            <TextBlock Text="Destino" Grid.Row="3"/>
            
            <TextBlock Grid.Row="3" Grid.Column="1"
                       Text="{Binding Destination.Name}" FontWeight="DemiBold"/>

            <ComboBox Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" Width="150"
                      ItemsSource="{Binding Source={StaticResource cvsInventoryAreas}}"                      
                      SelectedItem="{Binding Destination}" 
                      DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="False"/>

            <!--<TextBlock Grid.Row="1" Text="" />
            <TextBox Margin="5" Grid.Row="1" Grid.Column="1" 
                     IsReadOnly="{Binding Closed}"
                     Text="{Binding Number, UpdateSourceTrigger=PropertyChanged}"/>-->

            <TextBlock Grid.Row="4" Text="Memo"  />
            <TextBox Grid.Row="4" Grid.Column="1" 
                     TextWrapping="Wrap"
                     Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}"/>

            <!--<StackPanel Orientation="Horizontal" 
                        Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="3" >

                <ComboBox Style="{StaticResource myComboBoxStyle}" Width="125"
                          ItemsSource="{Binding PurchaseTags}"
                          DisplayMemberPath="Name"
                          SelectedItem="{Binding PurchaseTagToAdd}"/>

                <Button Content="Añadir" Command="{Binding AddPurchaseTagCommand}"/>                

            </StackPanel>-->
            
            
        </Grid>        

        <!--Valeitems-->
        <DataGrid Name="dgItems"  Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding LineItems}"
                  SelectedItem="{Binding SelectedLineItem}">

            <DataGrid.InputBindings>
                <KeyBinding Command="{Binding RemoveLineItemCommand}" Key="Del"/>
            </DataGrid.InputBindings>
            
            <!--<DataGrid.RowValidationRules>
                <val:ProductQuantityItemValidationRule ValidationStep="UpdatedValue"/>
            </DataGrid.RowValidationRules>-->
            
            <DataGrid.Columns>
                <DataGridTextColumn Header="Cantidad" Binding="{Binding Quantity}" />
                <!--Unit of Measure-->
                <DataGridComboBoxColumn Header="U/M"
                                        SelectedItemBinding="{Binding UnitMeasure}"                                        
                                        DisplayMemberPath="Name">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource"
                                    Value="{Binding Product.UMFamily.UnitMeasures}" />
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" 
                                    Value="{Binding Product.UMFamily.UnitMeasures}" />
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                <!--Product-->
                <!--<DataGridTemplateColumn Header="Producto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Product.Name}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <mycontrols:AutoCompleteFocusableBox 
                                     ItemsSource="{Binding Source={StaticResource cvsProductsForPurchase}}" 
                                     ValueMemberPath="Name"
                                     FilterMode="ContainsOrdinal" IsTextCompletionEnabled="True"
                                     SelectedItem="{Binding Product, Mode=TwoWay}">
                                <mycontrols:AutoCompleteFocusableBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}"/>
                                    </DataTemplate>
                                </mycontrols:AutoCompleteFocusableBox.ItemTemplate>

                                <mycontrols:AutoCompleteFocusableBox.Resources>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightBlue"  />
                                </mycontrols:AutoCompleteFocusableBox.Resources>
                            </mycontrols:AutoCompleteFocusableBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    
                </DataGridTemplateColumn>-->

                <DataGridTextColumn Header="Descripcion" Binding="{Binding Product.Name}" 
                                    Width="*" IsReadOnly="True"/>

                <DataGridTextColumn Header="Precio" Binding="{Binding Path=Price, StringFormat=c}"
                                    MinWidth="60" >
                    <!--<DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Setters>
                                <Setter Property="TextBlock.TextAlignment" Value="Right" />
                            </Style.Setters>
                        </Style>
                    </DataGridTextColumn.CellStyle>-->
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!--<TextBlock Text="Cerrado" Visibility="{Binding Closed, Converter={StaticResource btvConverter}}" 
                   FontWeight="Bold" FontSize="48" Opacity="0.2" 
                   HorizontalAlignment="Center" VerticalAlignment="Center" 
                   RenderTransformOrigin="0.5,0.5" Grid.Row="1" >
            	<TextBlock.RenderTransform>
            		<TransformGroup>
            			<ScaleTransform/>
            			<SkewTransform/>
            			<RotateTransform Angle="-45"/>
            			<TranslateTransform/>
            		</TransformGroup>
            	</TextBlock.RenderTransform>
        </TextBlock>-->

        <Grid Grid.Row="3" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <TextBox Margin="5" Name="tbQuantity" Width="50" 
                     KeyDown="tbQuantity_KeyDown" KeyUp="tbQuantity_KeyUp"
                     Text="{Binding QuantityToAdd}">
                <!--<TextBox.Text>
                    <MultiBinding Converter="{StaticResource qttyConverter}" 
                                  UpdateSourceTrigger="PropertyChanged">
                        <Binding Path="QuantityToAdd"/>
                        <Binding Path="UnitMeasureToAdd"/>
                    </MultiBinding>
                </TextBox.Text>-->
            </TextBox>

            <mycontrols:AutoCompleteFocusableBox x:Name="acbProduct" Grid.Column="1" Margin="5" KeyUp="AutoCompleteBox_KeyUp"
                                     ItemsSource="{Binding Source={StaticResource cvsProductsForPurchase}}" 
                                     ValueMemberPath="Name"
                                     FilterMode="ContainsOrdinal" IsTextCompletionEnabled="True"
                                     SelectedItem="{Binding ProductToAdd, Mode=TwoWay}">
                <mycontrols:AutoCompleteFocusableBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}"/>
                    </DataTemplate>
                </mycontrols:AutoCompleteFocusableBox.ItemTemplate>

                <mycontrols:AutoCompleteFocusableBox.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightBlue"  />
                </mycontrols:AutoCompleteFocusableBox.Resources>
            </mycontrols:AutoCompleteFocusableBox>

            <Button Name="btnAdd" Grid.Column="2" Command="{Binding NewCommand}" >
                Añadir
            </Button>
        </Grid>

        <!--TotalPrice-->
        <!--<Grid Grid.Row="2">            
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>            

            <Rectangle Style="{StaticResource TotalRectangle}"
                                       Grid.ColumnSpan="2" />
            
            <TextBlock Text="{Binding Path=TotalPrice, StringFormat=Total {0:c}}"
                       Style="{StaticResource TotalExpenses}" Grid.Column="1" Margin="10"
                       TextAlignment="Right"/>

            <TextBlock Text="{Binding Path=ProductCount, StringFormat={}{0:n} producto(s)}"
                       Style="{StaticResource TotalExpenses}" Margin="10"/>
        </Grid>-->

        <Grid Margin="5,0" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding ElementName=dgItems,Path=Columns[0].ActualWidth}"/>
                <ColumnDefinition Width="{Binding ElementName=dgItems,Path=Columns[1].ActualWidth}"/>
                <ColumnDefinition Width="{Binding ElementName=dgItems,Path=Columns[2].ActualWidth}"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            
            <TextBlock Margin="2,0" Grid.Column="2" Text="Total" HorizontalAlignment="Right"/>

            <TextBlock Margin="2,0" Grid.Column="3" FontWeight="Bold"
                       Text="{Binding TotalPrice, StringFormat=c}"/>

            <!--<Border Grid.Column="3" BorderBrush="Black" BorderThickness="1,0,1,1" Margin="0,-5,0,0">
                
            </Border>-->

        </Grid>

        <DockPanel Grid.Row="4" HorizontalAlignment="Right"
                   Visibility="{Binding HasPendingChanges,Converter={StaticResource btvConverter}}">

            <Button Content="Guardar" Command="{Binding SaveCommand}"/>
            <Button Content="Cancelar" Command="{Binding CancelCommand}"/>

        </DockPanel>

        <!--<StackPanel Orientation="Horizontal" Grid.Row="4" >
            <Button Content="{Binding OpenOrCloseContent}" Margin="5"
                    Command="{Binding ToggleCloseCommand}"/>

            <Button Name="notesButton" Command="{Binding ShowNotesCommand}" >
                <StackPanel>
                    <TextBlock Text="Notas" FontSize="14" Margin="0"/>
                    <Popup Placement="Top" StaysOpen="False"
                           PopupAnimation="Fade" IsOpen="{Binding ShowingNotes}"
                           AllowsTransparency="True" VerticalOffset="-10" >

                        <Grid Margin="0,0,10,10" Height="200" Width="200" >
                            <Grid.Effect>
                                <DropShadowEffect/>
                            </Grid.Effect>
                            <TextBox TextWrapping="Wrap" VerticalScrollBarVisibility="Auto"
                                     IsReadOnly="{Binding Closed}" AcceptsReturn="True" BorderThickness="0"
                                     Text="{Binding Notes, UpdateSourceTrigger=PropertyChanged}" 
                                     Background="#FFFCF9A3" VerticalAlignment="Stretch"/>
                        </Grid>

                    </Popup>
                </StackPanel>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="Height" Value="25"/>
                        <Setter Property="Width" Value="60"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasNotes}" Value="True" >
                                <Setter Property="Background" Value="#FFFCF9A3" />
                            </DataTrigger>
                        </Style.Triggers>
                        
                    </Style>
                </Button.Style>
            </Button>            
            
        </StackPanel>
        
        <Button Grid.Row="4" HorizontalAlignment="Right" Width="auto"
                Command="{Binding ShowProductTemplatePopupCommand}">
            <StackPanel>
                <TextBlock Text="Añadir plantilla" Margin="0"/>
                <Popup Placement="Top" StaysOpen="False"
                       PopupAnimation="Fade" IsOpen="{Binding ShowingProductTemplatePopup}"
                       AllowsTransparency="True" VerticalOffset="-10" >

                    <popups:AddProductTemplatePopup/>

                </Popup>
            </StackPanel>
        </Button>-->
        
        
    </Grid>
</Window>
