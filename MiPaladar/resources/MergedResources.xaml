<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
                    
                    xmlns:mp="clr-namespace:MiPaladar.Classes"                    
                    xmlns:conv="clr-namespace:MiPaladar.Converters"
                    xmlns:vsm ="clr-namespace:System.Windows;assembly=PresentationFramework"
                    xmlns:mycontrols="clr-namespace:MiPaladar.MyControls"
                    xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit">

    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/Metro/Light/Metro.MSControls.Core.Implicit.xaml" />
        <ResourceDictionary Source="/Themes/Metro/Light/Metro.MSControls.Toolkit.Implicit.xaml" />
    </ResourceDictionary.MergedDictionaries>-->

    <!--Brushes-->
    <LinearGradientBrush x:Key="Brush_HeaderBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#73B2F5" Offset="0" />
        <GradientStop Color="#4E87D4" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="myBackgroundBrush" Color="Orange"/>
    <SolidColorBrush x:Key="myDarkBackgroundBrush" Color="DarkOrange"/>
    
    <LinearGradientBrush x:Key="headerBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="LightGray" Offset="0" />
        <GradientStop Color="LightGray" Offset="1" />
        <GradientStop Color="White" Offset="0.5" />
    </LinearGradientBrush>

    <!--Control Styles-->
    <!-- DataGridColumnHeader style -->
    <!--<Style x:Key="ColumnHeaderStyle1" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource myBackgroundBrush}"/>
        <Setter Property="Foreground" Value="white" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />

        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="DemiBold" />
        
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ToolTip" Value="Click to sort."/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style TargetType="{x:Type GroupBox}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>-->

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="FontSize" Value="14"/>
        <!--<Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStyle1}"/>-->
        <Setter Property="RowValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="0,-2,0,-2"
                          ToolTip="{Binding RelativeSource={RelativeSource
                        FindAncestor, AncestorType={x:Type DataGridRow}},
                        Path=(Validation.Errors)[0].ErrorContent}">
                        <Ellipse StrokeThickness="0" Fill="Red" 
                                 Width="{TemplateBinding FontSize}" 
                                 Height="{TemplateBinding FontSize}" />
                        <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" 
                                   FontWeight="Bold" Foreground="White" 
                                   HorizontalAlignment="Center"  />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <Style TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="14"/>        
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style TargetType="ToggleButton">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style TargetType="DatePicker">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
    </Style>
    
    <Style TargetType="Menu">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!--TextBoxes and TextBlocks Styles-->

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!--<Setter Property="HorizontalAlignment" Value="Center"/>-->
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style TargetType="{x:Type mycontrols:AutoCompleteFocusableBox}" >
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style TargetType="{x:Type toolkit:AutoCompleteBox}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!--Validation Styles-->
    <!--<ControlTemplate x:Key="validationTemplate">
        <DockPanel>
            <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
            <AdornedElementPlaceholder/>
        </DockPanel>
    </ControlTemplate>-->

    <Style x:Key="headerStyle" 
           TargetType="TextBlock">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style TargetType="HeaderedContentControl">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <Border BorderBrush="Gray" BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid>
                                <Rectangle Fill="{StaticResource headerBrush}"/>
                                <ContentPresenter ContentSource="Header" />
                            </Grid>

                            <ContentPresenter ContentSource="Content" Grid.Row="1"/>
                        </Grid>                        
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="textBoxInError" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Background" Value="Red"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Colored Rectangles-->
    <Style x:Key="TotalRectangle" TargetType="{x:Type Rectangle}">
        <Setter Property="Stroke" Value="{StaticResource Brush_HeaderBackground}"/>
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Fill" Value="{StaticResource Brush_HeaderBackground}"/>


        <!--<Setter Property="RadiusX"
              Value="5" />
            <Setter Property="RadiusY"
              Value="5" />-->
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="TotalExpenses" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Trebuchet MS" />
        <Setter Property="FontSize" Value="16pt" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="8,5"/>
    </Style>

    

    <!--Images-->
    <Image x:Key="NewImage" x:Shared="False" Source="../Images/New.png" Height="16" Width="16"
           RenderOptions.BitmapScalingMode="NearestNeighbor"/>
    <!--<Image x:Key="DeleteImage" x:Shared="False" Source="../Images/Delete.png" Height="16" Width="16"
           RenderOptions.BitmapScalingMode="NearestNeighbor"/>-->
    <Image x:Key="PrintImage" x:Shared="False" Source="../Images/Print.png" Height="16" Width="16"
           RenderOptions.BitmapScalingMode="NearestNeighbor"/>
    <Image x:Key="ExcelImage" x:Shared="False" Source="../Images/Excel.png" Height="25" Width="25"/>

    

    <!-- DataGrid style -->
    <!--<Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStyle1}"/>
    </Style>-->    

    <!--<Style x:Key="redCloseButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid >
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup Name="CommonStates">

                                <vsm:VisualState Name="Normal"/>

                                <vsm:VisualState Name="MouseOver">
                                    <Storyboard>                                        
                                        <ColorAnimation Storyboard.TargetName="theEllipse"
                                                        Storyboard.TargetProperty="Fill.Color" 
                                                        To="Orange" Duration="0"/>
                                    </Storyboard>
                                </vsm:VisualState>

                                <vsm:VisualState Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="theEllipse"
                                                        Storyboard.TargetProperty="Fill.Color" 
                                                        To="Orange" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="theEllipse"
                                                        Storyboard.TargetProperty="StrokeThickness" 
                                                        To="3" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </vsm:VisualState>

                            </vsm:VisualStateGroup>

                        </vsm:VisualStateManager.VisualStateGroups>
                        
                        <Ellipse Name="theEllipse" Fill="Gray" Stroke="White" StrokeThickness="2"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>

                </ControlTemplate>

            </Setter.Value>            
        </Setter>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Content" Value="X"/>
        <Setter Property="Background" Value="Red"/>
    </Style>-->

</ResourceDictionary>