//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RestaurantDBModel", "CategoryProductIndex", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Category), "ProductIndex", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.ProductIndex), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "ProductIngredient", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Product), "Ingredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Ingredient), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "ProductIngredient1", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Product), "Ingredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Ingredient), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "ProductProductIndex", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Product), "ProductIndex", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.ProductIndex), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "CurrentExistenceProduct", "CurrentExistence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.InventoryItem), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Product))]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "ProductExistence", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Product), "Existence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.InventoryTrace), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "FK_Tables_PriceLists", "PriceList", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MiPaladar.Entities.PriceList), "Table", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Table), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "FK_Products_ProductionAreas", "ProductionArea", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MiPaladar.Entities.ProductionArea), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Product), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "FK_Ingredients_UnitMeasures", "UnitMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.UnitMeasure), "Ingredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Ingredient), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "FK_UMFamilyProduct", "UMFamily", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.UMFamily), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Product), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "FK_UnitMeasures_UMFamilies", "UMFamily", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.UMFamily), "UnitMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.UnitMeasure), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "InventoryInventoryItem", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Inventory), "InventoryItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.InventoryItem), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "InventoryTraceInventory", "InventoryTrace", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.InventoryTrace), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Inventory), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "TransferFromInventory", "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Transfer), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Inventory))]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "TransferToInventory", "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Transfer), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Inventory))]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "AdjustmentInventory", "Adjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Adjustment), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Inventory))]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "PurchaseInventory", "Purchase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Purchase), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MiPaladar.Entities.Inventory))]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "ProductionInventory", "Production", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Production), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Inventory))]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "FK_UnitMeasureProductCost", "UnitMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.UnitMeasure), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Product), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "LineItemProduct", "LineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.LineItem), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Product))]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "LineItemUnitMeasure", "LineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.LineItem), "UnitMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.UnitMeasure))]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "SaleTable", "Sale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Sale), "Table", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MiPaladar.Entities.Table))]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "OrderEmployee", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Order), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MiPaladar.Entities.Employee))]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "LineItemOrder", "LineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.LineItem), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Order))]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "FK_Products_ProductionAreas1", "ProductionArea", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MiPaladar.Entities.ProductionArea), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Product), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "FK_EmployeesRole", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.Role), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Employee), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "FK_ProductsMinimumStockUnitMeasure", "UnitMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MiPaladar.Entities.UnitMeasure), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Product), true)]
[assembly: EdmRelationshipAttribute("RestaurantDBModel", "FK_ShiftSale", "Shift", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MiPaladar.Entities.Shift), "Sale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiPaladar.Entities.Sale), true)]

#endregion

namespace MiPaladar.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RestaurantDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RestaurantDBEntities object using the connection string found in the 'RestaurantDBEntities' section of the application configuration file.
        /// </summary>
        public RestaurantDBEntities() : base("name=RestaurantDBEntities", "RestaurantDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RestaurantDBEntities object.
        /// </summary>
        public RestaurantDBEntities(string connectionString) : base(connectionString, "RestaurantDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RestaurantDBEntities object.
        /// </summary>
        public RestaurantDBEntities(EntityConnection connection) : base(connection, "RestaurantDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LineItem> LineItems
        {
            get
            {
                if ((_LineItems == null))
                {
                    _LineItems = base.CreateObjectSet<LineItem>("LineItems");
                }
                return _LineItems;
            }
        }
        private ObjectSet<LineItem> _LineItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PriceList> PriceLists
        {
            get
            {
                if ((_PriceLists == null))
                {
                    _PriceLists = base.CreateObjectSet<PriceList>("PriceLists");
                }
                return _PriceLists;
            }
        }
        private ObjectSet<PriceList> _PriceLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ingredient> Ingredients
        {
            get
            {
                if ((_Ingredients == null))
                {
                    _Ingredients = base.CreateObjectSet<Ingredient>("Ingredients");
                }
                return _Ingredients;
            }
        }
        private ObjectSet<Ingredient> _Ingredients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Table> Tables
        {
            get
            {
                if ((_Tables == null))
                {
                    _Tables = base.CreateObjectSet<Table>("Tables");
                }
                return _Tables;
            }
        }
        private ObjectSet<Table> _Tables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductIndex> ProductIndexes
        {
            get
            {
                if ((_ProductIndexes == null))
                {
                    _ProductIndexes = base.CreateObjectSet<ProductIndex>("ProductIndexes");
                }
                return _ProductIndexes;
            }
        }
        private ObjectSet<ProductIndex> _ProductIndexes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryItem> InventoryItems
        {
            get
            {
                if ((_InventoryItems == null))
                {
                    _InventoryItems = base.CreateObjectSet<InventoryItem>("InventoryItems");
                }
                return _InventoryItems;
            }
        }
        private ObjectSet<InventoryItem> _InventoryItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryTrace> InventoryTraces
        {
            get
            {
                if ((_InventoryTraces == null))
                {
                    _InventoryTraces = base.CreateObjectSet<InventoryTrace>("InventoryTraces");
                }
                return _InventoryTraces;
            }
        }
        private ObjectSet<InventoryTrace> _InventoryTraces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductionArea> ProductionAreas
        {
            get
            {
                if ((_ProductionAreas == null))
                {
                    _ProductionAreas = base.CreateObjectSet<ProductionArea>("ProductionAreas");
                }
                return _ProductionAreas;
            }
        }
        private ObjectSet<ProductionArea> _ProductionAreas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UMFamily> UMFamilies
        {
            get
            {
                if ((_UMFamilies == null))
                {
                    _UMFamilies = base.CreateObjectSet<UMFamily>("UMFamilies");
                }
                return _UMFamilies;
            }
        }
        private ObjectSet<UMFamily> _UMFamilies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnitMeasure> UnitMeasures
        {
            get
            {
                if ((_UnitMeasures == null))
                {
                    _UnitMeasures = base.CreateObjectSet<UnitMeasure>("UnitMeasures");
                }
                return _UnitMeasures;
            }
        }
        private ObjectSet<UnitMeasure> _UnitMeasures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Inventory> Inventories
        {
            get
            {
                if ((_Inventories == null))
                {
                    _Inventories = base.CreateObjectSet<Inventory>("Inventories");
                }
                return _Inventories;
            }
        }
        private ObjectSet<Inventory> _Inventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Shift> Shifts
        {
            get
            {
                if ((_Shifts == null))
                {
                    _Shifts = base.CreateObjectSet<Shift>("Shifts");
                }
                return _Shifts;
            }
        }
        private ObjectSet<Shift> _Shifts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Misc> Miscs
        {
            get
            {
                if ((_Miscs == null))
                {
                    _Miscs = base.CreateObjectSet<Misc>("Miscs");
                }
                return _Miscs;
            }
        }
        private ObjectSet<Misc> _Miscs;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LineItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLineItems(LineItem lineItem)
        {
            base.AddObject("LineItems", lineItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PriceLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPriceLists(PriceList priceList)
        {
            base.AddObject("PriceLists", priceList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ingredients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIngredients(Ingredient ingredient)
        {
            base.AddObject("Ingredients", ingredient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTables(Table table)
        {
            base.AddObject("Tables", table);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductIndexes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductIndexes(ProductIndex productIndex)
        {
            base.AddObject("ProductIndexes", productIndex);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryItems(InventoryItem inventoryItem)
        {
            base.AddObject("InventoryItems", inventoryItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryTraces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryTraces(InventoryTrace inventoryTrace)
        {
            base.AddObject("InventoryTraces", inventoryTrace);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductionAreas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductionAreas(ProductionArea productionArea)
        {
            base.AddObject("ProductionAreas", productionArea);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UMFamilies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUMFamilies(UMFamily uMFamily)
        {
            base.AddObject("UMFamilies", uMFamily);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnitMeasures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnitMeasures(UnitMeasure unitMeasure)
        {
            base.AddObject("UnitMeasures", unitMeasure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Inventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventories(Inventory inventory)
        {
            base.AddObject("Inventories", inventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Shifts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShifts(Shift shift)
        {
            base.AddObject("Shifts", shift);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Miscs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMiscs(Misc misc)
        {
            base.AddObject("Miscs", misc);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int DeleteStuff()
        {
            return base.ExecuteFunction("DeleteStuff");
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Adjustment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Adjustment : Order
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Adjustment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Adjustment CreateAdjustment(global::System.Int32 id, global::System.DateTime date, global::System.DateTime dateCreated)
        {
            Adjustment adjustment = new Adjustment();
            adjustment.Id = id;
            adjustment.Date = date;
            adjustment.DateCreated = dateCreated;
            return adjustment;
        }

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "AdjustmentInventory", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.AdjustmentInventory", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.AdjustmentInventory", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.AdjustmentInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("RestaurantDBModel.AdjustmentInventory", "Inventory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="AdjustmentItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdjustmentItem : LineItem
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdjustmentItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        public static AdjustmentItem CreateAdjustmentItem(global::System.Int32 id, global::System.Double quantity, global::System.Decimal cost)
        {
            AdjustmentItem adjustmentItem = new AdjustmentItem();
            adjustmentItem.Id = id;
            adjustmentItem.Quantity = quantity;
            adjustmentItem.Cost = cost;
            return adjustmentItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value, "Cost");
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            return category;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "CategoryProductIndex", "ProductIndex")]
        public EntityCollection<ProductIndex> RelatedProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductIndex>("RestaurantDBModel.CategoryProductIndex", "ProductIndex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductIndex>("RestaurantDBModel.CategoryProductIndex", "ProductIndex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="canPurchase">Initial value of the CanPurchase property.</param>
        /// <param name="canSell">Initial value of the CanSell property.</param>
        /// <param name="role_Id">Initial value of the Role_Id property.</param>
        public static Employee CreateEmployee(global::System.Int32 id, global::System.String name, global::System.Boolean isActive, global::System.Boolean canPurchase, global::System.Boolean canSell, global::System.Int32 role_Id)
        {
            Employee employee = new Employee();
            employee.Id = id;
            employee.Name = name;
            employee.IsActive = isActive;
            employee.CanPurchase = canPurchase;
            employee.CanSell = canSell;
            employee.Role_Id = role_Id;
            return employee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanPurchase
        {
            get
            {
                return _CanPurchase;
            }
            set
            {
                OnCanPurchaseChanging(value);
                ReportPropertyChanging("CanPurchase");
                _CanPurchase = StructuralObject.SetValidValue(value, "CanPurchase");
                ReportPropertyChanged("CanPurchase");
                OnCanPurchaseChanged();
            }
        }
        private global::System.Boolean _CanPurchase;
        partial void OnCanPurchaseChanging(global::System.Boolean value);
        partial void OnCanPurchaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSell
        {
            get
            {
                return _CanSell;
            }
            set
            {
                OnCanSellChanging(value);
                ReportPropertyChanging("CanSell");
                _CanSell = StructuralObject.SetValidValue(value, "CanSell");
                ReportPropertyChanged("CanSell");
                OnCanSellChanged();
            }
        }
        private global::System.Boolean _CanSell;
        partial void OnCanSellChanging(global::System.Boolean value);
        partial void OnCanSellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageFileName
        {
            get
            {
                return _ImageFileName;
            }
            set
            {
                OnImageFileNameChanging(value);
                ReportPropertyChanging("ImageFileName");
                _ImageFileName = StructuralObject.SetValidValue(value, true, "ImageFileName");
                ReportPropertyChanged("ImageFileName");
                OnImageFileNameChanged();
            }
        }
        private global::System.String _ImageFileName;
        partial void OnImageFileNameChanging(global::System.String value);
        partial void OnImageFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Role_Id
        {
            get
            {
                return _Role_Id;
            }
            set
            {
                OnRole_IdChanging(value);
                ReportPropertyChanging("Role_Id");
                _Role_Id = StructuralObject.SetValidValue(value, "Role_Id");
                ReportPropertyChanged("Role_Id");
                OnRole_IdChanged();
            }
        }
        private global::System.Int32 _Role_Id;
        partial void OnRole_IdChanging(global::System.Int32 value);
        partial void OnRole_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_EmployeesRole", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RestaurantDBModel.FK_EmployeesRole", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RestaurantDBModel.FK_EmployeesRole", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RestaurantDBModel.FK_EmployeesRole", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("RestaurantDBModel.FK_EmployeesRole", "Role", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Ingredient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ingredient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ingredient object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="ingredientProductId">Initial value of the IngredientProductId property.</param>
        /// <param name="baseProductId">Initial value of the BaseProductId property.</param>
        /// <param name="unitMeasureId">Initial value of the UnitMeasureId property.</param>
        public static Ingredient CreateIngredient(global::System.Int32 id, global::System.Double quantity, global::System.Int32 ingredientProductId, global::System.Int32 baseProductId, global::System.Int32 unitMeasureId)
        {
            Ingredient ingredient = new Ingredient();
            ingredient.Id = id;
            ingredient.Quantity = quantity;
            ingredient.IngredientProductId = ingredientProductId;
            ingredient.BaseProductId = baseProductId;
            ingredient.UnitMeasureId = unitMeasureId;
            return ingredient;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IngredientProductId
        {
            get
            {
                return _IngredientProductId;
            }
            set
            {
                OnIngredientProductIdChanging(value);
                ReportPropertyChanging("IngredientProductId");
                _IngredientProductId = StructuralObject.SetValidValue(value, "IngredientProductId");
                ReportPropertyChanged("IngredientProductId");
                OnIngredientProductIdChanged();
            }
        }
        private global::System.Int32 _IngredientProductId;
        partial void OnIngredientProductIdChanging(global::System.Int32 value);
        partial void OnIngredientProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BaseProductId
        {
            get
            {
                return _BaseProductId;
            }
            set
            {
                OnBaseProductIdChanging(value);
                ReportPropertyChanging("BaseProductId");
                _BaseProductId = StructuralObject.SetValidValue(value, "BaseProductId");
                ReportPropertyChanged("BaseProductId");
                OnBaseProductIdChanged();
            }
        }
        private global::System.Int32 _BaseProductId;
        partial void OnBaseProductIdChanging(global::System.Int32 value);
        partial void OnBaseProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitMeasureId
        {
            get
            {
                return _UnitMeasureId;
            }
            set
            {
                OnUnitMeasureIdChanging(value);
                ReportPropertyChanging("UnitMeasureId");
                _UnitMeasureId = StructuralObject.SetValidValue(value, "UnitMeasureId");
                ReportPropertyChanged("UnitMeasureId");
                OnUnitMeasureIdChanged();
            }
        }
        private global::System.Int32 _UnitMeasureId;
        partial void OnUnitMeasureIdChanging(global::System.Int32 value);
        partial void OnUnitMeasureIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "ProductIngredient", "Product")]
        public Product IngredientProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.ProductIngredient", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.ProductIngredient", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> IngredientProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.ProductIngredient", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("RestaurantDBModel.ProductIngredient", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "ProductIngredient1", "Product")]
        public Product BaseProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.ProductIngredient1", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.ProductIngredient1", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> BaseProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.ProductIngredient1", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("RestaurantDBModel.ProductIngredient1", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_Ingredients_UnitMeasures", "UnitMeasure")]
        public UnitMeasure UnitMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitMeasure>("RestaurantDBModel.FK_Ingredients_UnitMeasures", "UnitMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitMeasure>("RestaurantDBModel.FK_Ingredients_UnitMeasures", "UnitMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitMeasure> UnitMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitMeasure>("RestaurantDBModel.FK_Ingredients_UnitMeasures", "UnitMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitMeasure>("RestaurantDBModel.FK_Ingredients_UnitMeasures", "UnitMeasure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Inventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Inventory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isFloor">Initial value of the IsFloor property.</param>
        public static Inventory CreateInventory(global::System.Int32 id, global::System.String name, global::System.Boolean isFloor)
        {
            Inventory inventory = new Inventory();
            inventory.Id = id;
            inventory.Name = name;
            inventory.IsFloor = isFloor;
            return inventory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFloor
        {
            get
            {
                return _IsFloor;
            }
            set
            {
                OnIsFloorChanging(value);
                ReportPropertyChanging("IsFloor");
                _IsFloor = StructuralObject.SetValidValue(value, "IsFloor");
                ReportPropertyChanged("IsFloor");
                OnIsFloorChanged();
            }
        }
        private global::System.Boolean _IsFloor;
        partial void OnIsFloorChanging(global::System.Boolean value);
        partial void OnIsFloorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "InventoryInventoryItem", "InventoryItem")]
        public EntityCollection<InventoryItem> InventoryItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryItem>("RestaurantDBModel.InventoryInventoryItem", "InventoryItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryItem>("RestaurantDBModel.InventoryInventoryItem", "InventoryItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "InventoryTraceInventory", "InventoryTrace")]
        public EntityCollection<InventoryTrace> InventoryTraces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryTrace>("RestaurantDBModel.InventoryTraceInventory", "InventoryTrace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryTrace>("RestaurantDBModel.InventoryTraceInventory", "InventoryTrace", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "TransferFromInventory", "Transfer")]
        public EntityCollection<Transfer> TransfersFrom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("RestaurantDBModel.TransferFromInventory", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("RestaurantDBModel.TransferFromInventory", "Transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "TransferToInventory", "Transfer")]
        public EntityCollection<Transfer> TransfersTo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("RestaurantDBModel.TransferToInventory", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("RestaurantDBModel.TransferToInventory", "Transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "AdjustmentInventory", "Adjustment")]
        public EntityCollection<Adjustment> Adjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Adjustment>("RestaurantDBModel.AdjustmentInventory", "Adjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Adjustment>("RestaurantDBModel.AdjustmentInventory", "Adjustment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "PurchaseInventory", "Purchase")]
        public EntityCollection<Purchase> Purchases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Purchase>("RestaurantDBModel.PurchaseInventory", "Purchase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Purchase>("RestaurantDBModel.PurchaseInventory", "Purchase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "ProductionInventory", "Production")]
        public EntityCollection<Production> Productions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Production>("RestaurantDBModel.ProductionInventory", "Production");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Production>("RestaurantDBModel.ProductionInventory", "Production", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="InventoryItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="minimumQuantity">Initial value of the MinimumQuantity property.</param>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        public static InventoryItem CreateInventoryItem(global::System.Int32 id, global::System.Double quantity, global::System.Double minimumQuantity, global::System.Int32 inventoryId, global::System.Decimal cost)
        {
            InventoryItem inventoryItem = new InventoryItem();
            inventoryItem.Id = id;
            inventoryItem.Quantity = quantity;
            inventoryItem.MinimumQuantity = minimumQuantity;
            inventoryItem.InventoryId = inventoryId;
            inventoryItem.Cost = cost;
            return inventoryItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MinimumQuantity
        {
            get
            {
                return _MinimumQuantity;
            }
            set
            {
                OnMinimumQuantityChanging(value);
                ReportPropertyChanging("MinimumQuantity");
                _MinimumQuantity = StructuralObject.SetValidValue(value, "MinimumQuantity");
                ReportPropertyChanged("MinimumQuantity");
                OnMinimumQuantityChanged();
            }
        }
        private global::System.Double _MinimumQuantity;
        partial void OnMinimumQuantityChanging(global::System.Double value);
        partial void OnMinimumQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                OnInventoryIdChanging(value);
                ReportPropertyChanging("InventoryId");
                _InventoryId = StructuralObject.SetValidValue(value, "InventoryId");
                ReportPropertyChanged("InventoryId");
                OnInventoryIdChanged();
            }
        }
        private global::System.Int32 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int32 value);
        partial void OnInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value, "Cost");
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "CurrentExistenceProduct", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.CurrentExistenceProduct", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.CurrentExistenceProduct", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.CurrentExistenceProduct", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("RestaurantDBModel.CurrentExistenceProduct", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "InventoryInventoryItem", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.InventoryInventoryItem", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.InventoryInventoryItem", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.InventoryInventoryItem", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("RestaurantDBModel.InventoryInventoryItem", "Inventory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="InventoryTrace")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryTrace : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryTrace object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        public static InventoryTrace CreateInventoryTrace(global::System.Int32 id, global::System.Double quantity, global::System.DateTime date, global::System.Int32 productId, global::System.Int32 inventoryId)
        {
            InventoryTrace inventoryTrace = new InventoryTrace();
            inventoryTrace.Id = id;
            inventoryTrace.Quantity = quantity;
            inventoryTrace.Date = date;
            inventoryTrace.ProductId = productId;
            inventoryTrace.InventoryId = inventoryId;
            return inventoryTrace;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value, "ProductId");
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                OnInventoryIdChanging(value);
                ReportPropertyChanging("InventoryId");
                _InventoryId = StructuralObject.SetValidValue(value, "InventoryId");
                ReportPropertyChanged("InventoryId");
                OnInventoryIdChanged();
            }
        }
        private global::System.Int32 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int32 value);
        partial void OnInventoryIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "ProductExistence", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.ProductExistence", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.ProductExistence", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.ProductExistence", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("RestaurantDBModel.ProductExistence", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "InventoryTraceInventory", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.InventoryTraceInventory", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.InventoryTraceInventory", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.InventoryTraceInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("RestaurantDBModel.InventoryTraceInventory", "Inventory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="LineItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(AdjustmentItem))]
    [KnownTypeAttribute(typeof(TransferItem))]
    [KnownTypeAttribute(typeof(ProductionItem))]
    [KnownTypeAttribute(typeof(SaleLineItem))]
    [KnownTypeAttribute(typeof(PurchaseLineItem))]
    public partial class LineItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LineItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static LineItem CreateLineItem(global::System.Int32 id, global::System.Double quantity)
        {
            LineItem lineItem = new LineItem();
            lineItem.Id = id;
            lineItem.Quantity = quantity;
            return lineItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "LineItemProduct", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.LineItemProduct", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.LineItemProduct", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.LineItemProduct", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("RestaurantDBModel.LineItemProduct", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "LineItemUnitMeasure", "UnitMeasure")]
        public UnitMeasure UnitMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitMeasure>("RestaurantDBModel.LineItemUnitMeasure", "UnitMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitMeasure>("RestaurantDBModel.LineItemUnitMeasure", "UnitMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitMeasure> UnitMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitMeasure>("RestaurantDBModel.LineItemUnitMeasure", "UnitMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitMeasure>("RestaurantDBModel.LineItemUnitMeasure", "UnitMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "LineItemOrder", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("RestaurantDBModel.LineItemOrder", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("RestaurantDBModel.LineItemOrder", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("RestaurantDBModel.LineItemOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("RestaurantDBModel.LineItemOrder", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Misc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Misc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Misc object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="defaultTax">Initial value of the DefaultTax property.</param>
        /// <param name="startingShiftAmount">Initial value of the StartingShiftAmount property.</param>
        public static Misc CreateMisc(global::System.Int32 id, global::System.String companyName, global::System.Decimal defaultTax, global::System.Decimal startingShiftAmount)
        {
            Misc misc = new Misc();
            misc.Id = id;
            misc.CompanyName = companyName;
            misc.DefaultTax = defaultTax;
            misc.StartingShiftAmount = startingShiftAmount;
            return misc;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyImage
        {
            get
            {
                return _CompanyImage;
            }
            set
            {
                OnCompanyImageChanging(value);
                ReportPropertyChanging("CompanyImage");
                _CompanyImage = StructuralObject.SetValidValue(value, true, "CompanyImage");
                ReportPropertyChanged("CompanyImage");
                OnCompanyImageChanged();
            }
        }
        private global::System.String _CompanyImage;
        partial void OnCompanyImageChanging(global::System.String value);
        partial void OnCompanyImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DefaultTax
        {
            get
            {
                return _DefaultTax;
            }
            set
            {
                OnDefaultTaxChanging(value);
                ReportPropertyChanging("DefaultTax");
                _DefaultTax = StructuralObject.SetValidValue(value, "DefaultTax");
                ReportPropertyChanged("DefaultTax");
                OnDefaultTaxChanged();
            }
        }
        private global::System.Decimal _DefaultTax;
        partial void OnDefaultTaxChanging(global::System.Decimal value);
        partial void OnDefaultTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal StartingShiftAmount
        {
            get
            {
                return _StartingShiftAmount;
            }
            set
            {
                OnStartingShiftAmountChanging(value);
                ReportPropertyChanging("StartingShiftAmount");
                _StartingShiftAmount = StructuralObject.SetValidValue(value, "StartingShiftAmount");
                ReportPropertyChanged("StartingShiftAmount");
                OnStartingShiftAmountChanged();
            }
        }
        private global::System.Decimal _StartingShiftAmount;
        partial void OnStartingShiftAmountChanging(global::System.Decimal value);
        partial void OnStartingShiftAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportsFolder
        {
            get
            {
                return _ReportsFolder;
            }
            set
            {
                OnReportsFolderChanging(value);
                ReportPropertyChanging("ReportsFolder");
                _ReportsFolder = StructuralObject.SetValidValue(value, true, "ReportsFolder");
                ReportPropertyChanged("ReportsFolder");
                OnReportsFolderChanged();
            }
        }
        private global::System.String _ReportsFolder;
        partial void OnReportsFolderChanging(global::System.String value);
        partial void OnReportsFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegisterIP
        {
            get
            {
                return _RegisterIP;
            }
            set
            {
                OnRegisterIPChanging(value);
                ReportPropertyChanging("RegisterIP");
                _RegisterIP = StructuralObject.SetValidValue(value, true, "RegisterIP");
                ReportPropertyChanged("RegisterIP");
                OnRegisterIPChanged();
            }
        }
        private global::System.String _RegisterIP;
        partial void OnRegisterIPChanging(global::System.String value);
        partial void OnRegisterIPChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Transfer))]
    [KnownTypeAttribute(typeof(Adjustment))]
    [KnownTypeAttribute(typeof(Purchase))]
    [KnownTypeAttribute(typeof(Production))]
    [KnownTypeAttribute(typeof(Sale))]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Order CreateOrder(global::System.Int32 id, global::System.DateTime date, global::System.DateTime dateCreated)
        {
            Order order = new Order();
            order.Id = id;
            order.Date = date;
            order.DateCreated = dateCreated;
            return order;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value, "DateCreated");
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true, "Memo");
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "OrderEmployee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("RestaurantDBModel.OrderEmployee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("RestaurantDBModel.OrderEmployee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("RestaurantDBModel.OrderEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("RestaurantDBModel.OrderEmployee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "LineItemOrder", "LineItem")]
        public EntityCollection<LineItem> LineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LineItem>("RestaurantDBModel.LineItemOrder", "LineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LineItem>("RestaurantDBModel.LineItemOrder", "LineItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="PriceList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PriceList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PriceList object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PriceList CreatePriceList(global::System.Int32 id, global::System.String name)
        {
            PriceList priceList = new PriceList();
            priceList.Id = id;
            priceList.Name = name;
            return priceList;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_Tables_PriceLists", "Table")]
        public EntityCollection<Table> Tables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Table>("RestaurantDBModel.FK_Tables_PriceLists", "Table");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Table>("RestaurantDBModel.FK_Tables_PriceLists", "Table", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isRecipe">Initial value of the IsRecipe property.</param>
        /// <param name="isStorable">Initial value of the IsStorable property.</param>
        /// <param name="notInMenu">Initial value of the NotInMenu property.</param>
        /// <param name="salePrice">Initial value of the SalePrice property.</param>
        /// <param name="isProduced">Initial value of the IsProduced property.</param>
        /// <param name="isEntrant">Initial value of the IsEntrant property.</param>
        /// <param name="uMFamilyId">Initial value of the UMFamilyId property.</param>
        /// <param name="costPrice">Initial value of the CostPrice property.</param>
        /// <param name="costQuantity">Initial value of the CostQuantity property.</param>
        /// <param name="costUMId">Initial value of the CostUMId property.</param>
        /// <param name="minimumStock">Initial value of the MinimumStock property.</param>
        /// <param name="minimumStockUMId">Initial value of the MinimumStockUMId property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.Boolean isRecipe, global::System.Boolean isStorable, global::System.Boolean notInMenu, global::System.Decimal salePrice, global::System.Boolean isProduced, global::System.Boolean isEntrant, global::System.Int32 uMFamilyId, global::System.Decimal costPrice, global::System.Double costQuantity, global::System.Int32 costUMId, global::System.Double minimumStock, global::System.Int32 minimumStockUMId, global::System.Int32 code)
        {
            Product product = new Product();
            product.Id = id;
            product.IsRecipe = isRecipe;
            product.IsStorable = isStorable;
            product.NotInMenu = notInMenu;
            product.SalePrice = salePrice;
            product.IsProduced = isProduced;
            product.IsEntrant = isEntrant;
            product.UMFamilyId = uMFamilyId;
            product.CostPrice = costPrice;
            product.CostQuantity = costQuantity;
            product.CostUMId = costUMId;
            product.MinimumStock = minimumStock;
            product.MinimumStockUMId = minimumStockUMId;
            product.Code = code;
            return product;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRecipe
        {
            get
            {
                return _IsRecipe;
            }
            set
            {
                OnIsRecipeChanging(value);
                ReportPropertyChanging("IsRecipe");
                _IsRecipe = StructuralObject.SetValidValue(value, "IsRecipe");
                ReportPropertyChanged("IsRecipe");
                OnIsRecipeChanged();
            }
        }
        private global::System.Boolean _IsRecipe;
        partial void OnIsRecipeChanging(global::System.Boolean value);
        partial void OnIsRecipeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsStorable
        {
            get
            {
                return _IsStorable;
            }
            set
            {
                OnIsStorableChanging(value);
                ReportPropertyChanging("IsStorable");
                _IsStorable = StructuralObject.SetValidValue(value, "IsStorable");
                ReportPropertyChanged("IsStorable");
                OnIsStorableChanged();
            }
        }
        private global::System.Boolean _IsStorable;
        partial void OnIsStorableChanging(global::System.Boolean value);
        partial void OnIsStorableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NotInMenu
        {
            get
            {
                return _NotInMenu;
            }
            set
            {
                OnNotInMenuChanging(value);
                ReportPropertyChanging("NotInMenu");
                _NotInMenu = StructuralObject.SetValidValue(value, "NotInMenu");
                ReportPropertyChanged("NotInMenu");
                OnNotInMenuChanged();
            }
        }
        private global::System.Boolean _NotInMenu;
        partial void OnNotInMenuChanging(global::System.Boolean value);
        partial void OnNotInMenuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SalePrice
        {
            get
            {
                return _SalePrice;
            }
            set
            {
                OnSalePriceChanging(value);
                ReportPropertyChanging("SalePrice");
                _SalePrice = StructuralObject.SetValidValue(value, "SalePrice");
                ReportPropertyChanged("SalePrice");
                OnSalePriceChanged();
            }
        }
        private global::System.Decimal _SalePrice;
        partial void OnSalePriceChanging(global::System.Decimal value);
        partial void OnSalePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductionAreaId
        {
            get
            {
                return _ProductionAreaId;
            }
            set
            {
                OnProductionAreaIdChanging(value);
                ReportPropertyChanging("ProductionAreaId");
                _ProductionAreaId = StructuralObject.SetValidValue(value, "ProductionAreaId");
                ReportPropertyChanged("ProductionAreaId");
                OnProductionAreaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductionAreaId;
        partial void OnProductionAreaIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductionAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsProduced
        {
            get
            {
                return _IsProduced;
            }
            set
            {
                OnIsProducedChanging(value);
                ReportPropertyChanging("IsProduced");
                _IsProduced = StructuralObject.SetValidValue(value, "IsProduced");
                ReportPropertyChanged("IsProduced");
                OnIsProducedChanged();
            }
        }
        private global::System.Boolean _IsProduced;
        partial void OnIsProducedChanging(global::System.Boolean value);
        partial void OnIsProducedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEntrant
        {
            get
            {
                return _IsEntrant;
            }
            set
            {
                OnIsEntrantChanging(value);
                ReportPropertyChanging("IsEntrant");
                _IsEntrant = StructuralObject.SetValidValue(value, "IsEntrant");
                ReportPropertyChanged("IsEntrant");
                OnIsEntrantChanged();
            }
        }
        private global::System.Boolean _IsEntrant;
        partial void OnIsEntrantChanging(global::System.Boolean value);
        partial void OnIsEntrantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UMFamilyId
        {
            get
            {
                return _UMFamilyId;
            }
            set
            {
                OnUMFamilyIdChanging(value);
                ReportPropertyChanging("UMFamilyId");
                _UMFamilyId = StructuralObject.SetValidValue(value, "UMFamilyId");
                ReportPropertyChanged("UMFamilyId");
                OnUMFamilyIdChanged();
            }
        }
        private global::System.Int32 _UMFamilyId;
        partial void OnUMFamilyIdChanging(global::System.Int32 value);
        partial void OnUMFamilyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrintString
        {
            get
            {
                return _PrintString;
            }
            set
            {
                OnPrintStringChanging(value);
                ReportPropertyChanging("PrintString");
                _PrintString = StructuralObject.SetValidValue(value, true, "PrintString");
                ReportPropertyChanged("PrintString");
                OnPrintStringChanged();
            }
        }
        private global::System.String _PrintString;
        partial void OnPrintStringChanging(global::System.String value);
        partial void OnPrintStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageFileName
        {
            get
            {
                return _ImageFileName;
            }
            set
            {
                OnImageFileNameChanging(value);
                ReportPropertyChanging("ImageFileName");
                _ImageFileName = StructuralObject.SetValidValue(value, true, "ImageFileName");
                ReportPropertyChanged("ImageFileName");
                OnImageFileNameChanged();
            }
        }
        private global::System.String _ImageFileName;
        partial void OnImageFileNameChanging(global::System.String value);
        partial void OnImageFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CostPrice
        {
            get
            {
                return _CostPrice;
            }
            set
            {
                OnCostPriceChanging(value);
                ReportPropertyChanging("CostPrice");
                _CostPrice = StructuralObject.SetValidValue(value, "CostPrice");
                ReportPropertyChanged("CostPrice");
                OnCostPriceChanged();
            }
        }
        private global::System.Decimal _CostPrice;
        partial void OnCostPriceChanging(global::System.Decimal value);
        partial void OnCostPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CostQuantity
        {
            get
            {
                return _CostQuantity;
            }
            set
            {
                OnCostQuantityChanging(value);
                ReportPropertyChanging("CostQuantity");
                _CostQuantity = StructuralObject.SetValidValue(value, "CostQuantity");
                ReportPropertyChanged("CostQuantity");
                OnCostQuantityChanged();
            }
        }
        private global::System.Double _CostQuantity;
        partial void OnCostQuantityChanging(global::System.Double value);
        partial void OnCostQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CostUMId
        {
            get
            {
                return _CostUMId;
            }
            set
            {
                OnCostUMIdChanging(value);
                ReportPropertyChanging("CostUMId");
                _CostUMId = StructuralObject.SetValidValue(value, "CostUMId");
                ReportPropertyChanged("CostUMId");
                OnCostUMIdChanged();
            }
        }
        private global::System.Int32 _CostUMId;
        partial void OnCostUMIdChanging(global::System.Int32 value);
        partial void OnCostUMIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MinimumStock
        {
            get
            {
                return _MinimumStock;
            }
            set
            {
                OnMinimumStockChanging(value);
                ReportPropertyChanging("MinimumStock");
                _MinimumStock = StructuralObject.SetValidValue(value, "MinimumStock");
                ReportPropertyChanged("MinimumStock");
                OnMinimumStockChanged();
            }
        }
        private global::System.Double _MinimumStock;
        partial void OnMinimumStockChanging(global::System.Double value);
        partial void OnMinimumStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinimumStockUMId
        {
            get
            {
                return _MinimumStockUMId;
            }
            set
            {
                OnMinimumStockUMIdChanging(value);
                ReportPropertyChanging("MinimumStockUMId");
                _MinimumStockUMId = StructuralObject.SetValidValue(value, "MinimumStockUMId");
                ReportPropertyChanged("MinimumStockUMId");
                OnMinimumStockUMIdChanged();
            }
        }
        private global::System.Int32 _MinimumStockUMId;
        partial void OnMinimumStockUMIdChanging(global::System.Int32 value);
        partial void OnMinimumStockUMIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.Int32 _Code;
        partial void OnCodeChanging(global::System.Int32 value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "ProductIngredient", "Ingredient")]
        public EntityCollection<Ingredient> Outgredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ingredient>("RestaurantDBModel.ProductIngredient", "Ingredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ingredient>("RestaurantDBModel.ProductIngredient", "Ingredient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "ProductIngredient1", "Ingredient")]
        public EntityCollection<Ingredient> Ingredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ingredient>("RestaurantDBModel.ProductIngredient1", "Ingredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ingredient>("RestaurantDBModel.ProductIngredient1", "Ingredient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "ProductProductIndex", "ProductIndex")]
        public EntityCollection<ProductIndex> RelatedCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductIndex>("RestaurantDBModel.ProductProductIndex", "ProductIndex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductIndex>("RestaurantDBModel.ProductProductIndex", "ProductIndex", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "CurrentExistenceProduct", "CurrentExistence")]
        public EntityCollection<InventoryItem> CurrentExistence
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryItem>("RestaurantDBModel.CurrentExistenceProduct", "CurrentExistence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryItem>("RestaurantDBModel.CurrentExistenceProduct", "CurrentExistence", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "ProductExistence", "Existence")]
        public EntityCollection<InventoryTrace> Existences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryTrace>("RestaurantDBModel.ProductExistence", "Existence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryTrace>("RestaurantDBModel.ProductExistence", "Existence", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_Products_ProductionAreas", "ProductionArea")]
        public ProductionArea ProductionArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductionArea>("RestaurantDBModel.FK_Products_ProductionAreas", "ProductionArea").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductionArea>("RestaurantDBModel.FK_Products_ProductionAreas", "ProductionArea").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductionArea> ProductionAreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductionArea>("RestaurantDBModel.FK_Products_ProductionAreas", "ProductionArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductionArea>("RestaurantDBModel.FK_Products_ProductionAreas", "ProductionArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_UMFamilyProduct", "UMFamily")]
        public UMFamily UMFamily
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UMFamily>("RestaurantDBModel.FK_UMFamilyProduct", "UMFamily").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UMFamily>("RestaurantDBModel.FK_UMFamilyProduct", "UMFamily").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UMFamily> UMFamilyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UMFamily>("RestaurantDBModel.FK_UMFamilyProduct", "UMFamily");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UMFamily>("RestaurantDBModel.FK_UMFamilyProduct", "UMFamily", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_UnitMeasureProductCost", "UnitMeasure")]
        public UnitMeasure CostUnitMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitMeasure>("RestaurantDBModel.FK_UnitMeasureProductCost", "UnitMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitMeasure>("RestaurantDBModel.FK_UnitMeasureProductCost", "UnitMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitMeasure> CostUnitMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitMeasure>("RestaurantDBModel.FK_UnitMeasureProductCost", "UnitMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitMeasure>("RestaurantDBModel.FK_UnitMeasureProductCost", "UnitMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_ProductsMinimumStockUnitMeasure", "UnitMeasure")]
        public UnitMeasure MinimumStockUM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitMeasure>("RestaurantDBModel.FK_ProductsMinimumStockUnitMeasure", "UnitMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitMeasure>("RestaurantDBModel.FK_ProductsMinimumStockUnitMeasure", "UnitMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitMeasure> MinimumStockUMReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitMeasure>("RestaurantDBModel.FK_ProductsMinimumStockUnitMeasure", "UnitMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitMeasure>("RestaurantDBModel.FK_ProductsMinimumStockUnitMeasure", "UnitMeasure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="ProductIndex")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductIndex : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductIndex object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isMain">Initial value of the IsMain property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        public static ProductIndex CreateProductIndex(global::System.Int32 id, global::System.Boolean isMain, global::System.Int32 categoryId, global::System.Int32 productId)
        {
            ProductIndex productIndex = new ProductIndex();
            productIndex.Id = id;
            productIndex.IsMain = isMain;
            productIndex.CategoryId = categoryId;
            productIndex.ProductId = productId;
            return productIndex;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMain
        {
            get
            {
                return _IsMain;
            }
            set
            {
                OnIsMainChanging(value);
                ReportPropertyChanging("IsMain");
                _IsMain = StructuralObject.SetValidValue(value, "IsMain");
                ReportPropertyChanged("IsMain");
                OnIsMainChanged();
            }
        }
        private global::System.Boolean _IsMain;
        partial void OnIsMainChanging(global::System.Boolean value);
        partial void OnIsMainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value, "CategoryId");
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value, "ProductId");
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "CategoryProductIndex", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RestaurantDBModel.CategoryProductIndex", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RestaurantDBModel.CategoryProductIndex", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RestaurantDBModel.CategoryProductIndex", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("RestaurantDBModel.CategoryProductIndex", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "ProductProductIndex", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.ProductProductIndex", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.ProductProductIndex", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RestaurantDBModel.ProductProductIndex", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("RestaurantDBModel.ProductProductIndex", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Production")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Production : Order
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Production object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Production CreateProduction(global::System.Int32 id, global::System.DateTime date, global::System.DateTime dateCreated)
        {
            Production production = new Production();
            production.Id = id;
            production.Date = date;
            production.DateCreated = dateCreated;
            return production;
        }

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "ProductionInventory", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.ProductionInventory", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.ProductionInventory", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.ProductionInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("RestaurantDBModel.ProductionInventory", "Inventory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="ProductionArea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductionArea : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductionArea object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ProductionArea CreateProductionArea(global::System.Int32 id)
        {
            ProductionArea productionArea = new ProductionArea();
            productionArea.Id = id;
            return productionArea;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_Products_ProductionAreas", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("RestaurantDBModel.FK_Products_ProductionAreas", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("RestaurantDBModel.FK_Products_ProductionAreas", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="ProductionItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductionItem : LineItem
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductionItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        public static ProductionItem CreateProductionItem(global::System.Int32 id, global::System.Double quantity, global::System.Decimal cost)
        {
            ProductionItem productionItem = new ProductionItem();
            productionItem.Id = id;
            productionItem.Quantity = quantity;
            productionItem.Cost = cost;
            return productionItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value, "Cost");
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Purchase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Purchase : Order
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Purchase object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="total">Initial value of the Total property.</param>
        public static Purchase CreatePurchase(global::System.Int32 id, global::System.DateTime date, global::System.DateTime dateCreated, global::System.Decimal total)
        {
            Purchase purchase = new Purchase();
            purchase.Id = id;
            purchase.Date = date;
            purchase.DateCreated = dateCreated;
            purchase.Total = total;
            return purchase;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value, "Total");
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private global::System.Decimal _Total;
        partial void OnTotalChanging(global::System.Decimal value);
        partial void OnTotalChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "PurchaseInventory", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.PurchaseInventory", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.PurchaseInventory", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.PurchaseInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("RestaurantDBModel.PurchaseInventory", "Inventory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="PurchaseLineItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseLineItem : LineItem
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseLineItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static PurchaseLineItem CreatePurchaseLineItem(global::System.Int32 id, global::System.Double quantity, global::System.Decimal amount)
        {
            PurchaseLineItem purchaseLineItem = new PurchaseLineItem();
            purchaseLineItem.Id = id;
            purchaseLineItem.Quantity = quantity;
            purchaseLineItem.Amount = amount;
            return purchaseLineItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="canLogin">Initial value of the CanLogin property.</param>
        /// <param name="canSeeSales">Initial value of the CanSeeSales property.</param>
        /// <param name="canRemoveSales">Initial value of the CanRemoveSales property.</param>
        /// <param name="canSeeOldSales">Initial value of the CanSeeOldSales property.</param>
        /// <param name="canSeePurchases">Initial value of the CanSeePurchases property.</param>
        /// <param name="canRemovePurchases">Initial value of the CanRemovePurchases property.</param>
        /// <param name="canSeeOldPurchases">Initial value of the CanSeeOldPurchases property.</param>
        /// <param name="canSeeInventory">Initial value of the CanSeeInventory property.</param>
        /// <param name="canCreateProducts">Initial value of the CanCreateProducts property.</param>
        /// <param name="canEditProducts">Initial value of the CanEditProducts property.</param>
        /// <param name="canRemoveProducts">Initial value of the CanRemoveProducts property.</param>
        /// <param name="canSeeEmployees">Initial value of the CanSeeEmployees property.</param>
        /// <param name="canCreateEmployees">Initial value of the CanCreateEmployees property.</param>
        /// <param name="canEditEmployees">Initial value of the CanEditEmployees property.</param>
        /// <param name="canRemoveEmployees">Initial value of the CanRemoveEmployees property.</param>
        /// <param name="canSeeMiPaladar">Initial value of the CanSeeMiPaladar property.</param>
        /// <param name="canExportImport">Initial value of the CanExportImport property.</param>
        /// <param name="canSeeSalesReport">Initial value of the CanSeeSalesReport property.</param>
        /// <param name="canSeeSalesByItemReport">Initial value of the CanSeeSalesByItemReport property.</param>
        /// <param name="canSeeReports">Initial value of the CanSeeReports property.</param>
        /// <param name="canSeeRoles">Initial value of the CanSeeRoles property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name, global::System.Boolean canLogin, global::System.Boolean canSeeSales, global::System.Boolean canRemoveSales, global::System.Boolean canSeeOldSales, global::System.Boolean canSeePurchases, global::System.Boolean canRemovePurchases, global::System.Boolean canSeeOldPurchases, global::System.Boolean canSeeInventory, global::System.Boolean canCreateProducts, global::System.Boolean canEditProducts, global::System.Boolean canRemoveProducts, global::System.Boolean canSeeEmployees, global::System.Boolean canCreateEmployees, global::System.Boolean canEditEmployees, global::System.Boolean canRemoveEmployees, global::System.Boolean canSeeMiPaladar, global::System.Boolean canExportImport, global::System.Boolean canSeeSalesReport, global::System.Boolean canSeeSalesByItemReport, global::System.Boolean canSeeReports, global::System.Boolean canSeeRoles)
        {
            Role role = new Role();
            role.Id = id;
            role.Name = name;
            role.CanLogin = canLogin;
            role.CanSeeSales = canSeeSales;
            role.CanRemoveSales = canRemoveSales;
            role.CanSeeOldSales = canSeeOldSales;
            role.CanSeePurchases = canSeePurchases;
            role.CanRemovePurchases = canRemovePurchases;
            role.CanSeeOldPurchases = canSeeOldPurchases;
            role.CanSeeInventory = canSeeInventory;
            role.CanCreateProducts = canCreateProducts;
            role.CanEditProducts = canEditProducts;
            role.CanRemoveProducts = canRemoveProducts;
            role.CanSeeEmployees = canSeeEmployees;
            role.CanCreateEmployees = canCreateEmployees;
            role.CanEditEmployees = canEditEmployees;
            role.CanRemoveEmployees = canRemoveEmployees;
            role.CanSeeMiPaladar = canSeeMiPaladar;
            role.CanExportImport = canExportImport;
            role.CanSeeSalesReport = canSeeSalesReport;
            role.CanSeeSalesByItemReport = canSeeSalesByItemReport;
            role.CanSeeReports = canSeeReports;
            role.CanSeeRoles = canSeeRoles;
            return role;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanLogin
        {
            get
            {
                return _CanLogin;
            }
            set
            {
                OnCanLoginChanging(value);
                ReportPropertyChanging("CanLogin");
                _CanLogin = StructuralObject.SetValidValue(value, "CanLogin");
                ReportPropertyChanged("CanLogin");
                OnCanLoginChanged();
            }
        }
        private global::System.Boolean _CanLogin;
        partial void OnCanLoginChanging(global::System.Boolean value);
        partial void OnCanLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeeSales
        {
            get
            {
                return _CanSeeSales;
            }
            set
            {
                OnCanSeeSalesChanging(value);
                ReportPropertyChanging("CanSeeSales");
                _CanSeeSales = StructuralObject.SetValidValue(value, "CanSeeSales");
                ReportPropertyChanged("CanSeeSales");
                OnCanSeeSalesChanged();
            }
        }
        private global::System.Boolean _CanSeeSales;
        partial void OnCanSeeSalesChanging(global::System.Boolean value);
        partial void OnCanSeeSalesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanRemoveSales
        {
            get
            {
                return _CanRemoveSales;
            }
            set
            {
                OnCanRemoveSalesChanging(value);
                ReportPropertyChanging("CanRemoveSales");
                _CanRemoveSales = StructuralObject.SetValidValue(value, "CanRemoveSales");
                ReportPropertyChanged("CanRemoveSales");
                OnCanRemoveSalesChanged();
            }
        }
        private global::System.Boolean _CanRemoveSales;
        partial void OnCanRemoveSalesChanging(global::System.Boolean value);
        partial void OnCanRemoveSalesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeeOldSales
        {
            get
            {
                return _CanSeeOldSales;
            }
            set
            {
                OnCanSeeOldSalesChanging(value);
                ReportPropertyChanging("CanSeeOldSales");
                _CanSeeOldSales = StructuralObject.SetValidValue(value, "CanSeeOldSales");
                ReportPropertyChanged("CanSeeOldSales");
                OnCanSeeOldSalesChanged();
            }
        }
        private global::System.Boolean _CanSeeOldSales;
        partial void OnCanSeeOldSalesChanging(global::System.Boolean value);
        partial void OnCanSeeOldSalesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeePurchases
        {
            get
            {
                return _CanSeePurchases;
            }
            set
            {
                OnCanSeePurchasesChanging(value);
                ReportPropertyChanging("CanSeePurchases");
                _CanSeePurchases = StructuralObject.SetValidValue(value, "CanSeePurchases");
                ReportPropertyChanged("CanSeePurchases");
                OnCanSeePurchasesChanged();
            }
        }
        private global::System.Boolean _CanSeePurchases;
        partial void OnCanSeePurchasesChanging(global::System.Boolean value);
        partial void OnCanSeePurchasesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanRemovePurchases
        {
            get
            {
                return _CanRemovePurchases;
            }
            set
            {
                OnCanRemovePurchasesChanging(value);
                ReportPropertyChanging("CanRemovePurchases");
                _CanRemovePurchases = StructuralObject.SetValidValue(value, "CanRemovePurchases");
                ReportPropertyChanged("CanRemovePurchases");
                OnCanRemovePurchasesChanged();
            }
        }
        private global::System.Boolean _CanRemovePurchases;
        partial void OnCanRemovePurchasesChanging(global::System.Boolean value);
        partial void OnCanRemovePurchasesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeeOldPurchases
        {
            get
            {
                return _CanSeeOldPurchases;
            }
            set
            {
                OnCanSeeOldPurchasesChanging(value);
                ReportPropertyChanging("CanSeeOldPurchases");
                _CanSeeOldPurchases = StructuralObject.SetValidValue(value, "CanSeeOldPurchases");
                ReportPropertyChanged("CanSeeOldPurchases");
                OnCanSeeOldPurchasesChanged();
            }
        }
        private global::System.Boolean _CanSeeOldPurchases;
        partial void OnCanSeeOldPurchasesChanging(global::System.Boolean value);
        partial void OnCanSeeOldPurchasesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeeInventory
        {
            get
            {
                return _CanSeeInventory;
            }
            set
            {
                OnCanSeeInventoryChanging(value);
                ReportPropertyChanging("CanSeeInventory");
                _CanSeeInventory = StructuralObject.SetValidValue(value, "CanSeeInventory");
                ReportPropertyChanged("CanSeeInventory");
                OnCanSeeInventoryChanged();
            }
        }
        private global::System.Boolean _CanSeeInventory;
        partial void OnCanSeeInventoryChanging(global::System.Boolean value);
        partial void OnCanSeeInventoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanCreateProducts
        {
            get
            {
                return _CanCreateProducts;
            }
            set
            {
                OnCanCreateProductsChanging(value);
                ReportPropertyChanging("CanCreateProducts");
                _CanCreateProducts = StructuralObject.SetValidValue(value, "CanCreateProducts");
                ReportPropertyChanged("CanCreateProducts");
                OnCanCreateProductsChanged();
            }
        }
        private global::System.Boolean _CanCreateProducts;
        partial void OnCanCreateProductsChanging(global::System.Boolean value);
        partial void OnCanCreateProductsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanEditProducts
        {
            get
            {
                return _CanEditProducts;
            }
            set
            {
                OnCanEditProductsChanging(value);
                ReportPropertyChanging("CanEditProducts");
                _CanEditProducts = StructuralObject.SetValidValue(value, "CanEditProducts");
                ReportPropertyChanged("CanEditProducts");
                OnCanEditProductsChanged();
            }
        }
        private global::System.Boolean _CanEditProducts;
        partial void OnCanEditProductsChanging(global::System.Boolean value);
        partial void OnCanEditProductsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanRemoveProducts
        {
            get
            {
                return _CanRemoveProducts;
            }
            set
            {
                OnCanRemoveProductsChanging(value);
                ReportPropertyChanging("CanRemoveProducts");
                _CanRemoveProducts = StructuralObject.SetValidValue(value, "CanRemoveProducts");
                ReportPropertyChanged("CanRemoveProducts");
                OnCanRemoveProductsChanged();
            }
        }
        private global::System.Boolean _CanRemoveProducts;
        partial void OnCanRemoveProductsChanging(global::System.Boolean value);
        partial void OnCanRemoveProductsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeeEmployees
        {
            get
            {
                return _CanSeeEmployees;
            }
            set
            {
                OnCanSeeEmployeesChanging(value);
                ReportPropertyChanging("CanSeeEmployees");
                _CanSeeEmployees = StructuralObject.SetValidValue(value, "CanSeeEmployees");
                ReportPropertyChanged("CanSeeEmployees");
                OnCanSeeEmployeesChanged();
            }
        }
        private global::System.Boolean _CanSeeEmployees;
        partial void OnCanSeeEmployeesChanging(global::System.Boolean value);
        partial void OnCanSeeEmployeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanCreateEmployees
        {
            get
            {
                return _CanCreateEmployees;
            }
            set
            {
                OnCanCreateEmployeesChanging(value);
                ReportPropertyChanging("CanCreateEmployees");
                _CanCreateEmployees = StructuralObject.SetValidValue(value, "CanCreateEmployees");
                ReportPropertyChanged("CanCreateEmployees");
                OnCanCreateEmployeesChanged();
            }
        }
        private global::System.Boolean _CanCreateEmployees;
        partial void OnCanCreateEmployeesChanging(global::System.Boolean value);
        partial void OnCanCreateEmployeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanEditEmployees
        {
            get
            {
                return _CanEditEmployees;
            }
            set
            {
                OnCanEditEmployeesChanging(value);
                ReportPropertyChanging("CanEditEmployees");
                _CanEditEmployees = StructuralObject.SetValidValue(value, "CanEditEmployees");
                ReportPropertyChanged("CanEditEmployees");
                OnCanEditEmployeesChanged();
            }
        }
        private global::System.Boolean _CanEditEmployees;
        partial void OnCanEditEmployeesChanging(global::System.Boolean value);
        partial void OnCanEditEmployeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanRemoveEmployees
        {
            get
            {
                return _CanRemoveEmployees;
            }
            set
            {
                OnCanRemoveEmployeesChanging(value);
                ReportPropertyChanging("CanRemoveEmployees");
                _CanRemoveEmployees = StructuralObject.SetValidValue(value, "CanRemoveEmployees");
                ReportPropertyChanged("CanRemoveEmployees");
                OnCanRemoveEmployeesChanged();
            }
        }
        private global::System.Boolean _CanRemoveEmployees;
        partial void OnCanRemoveEmployeesChanging(global::System.Boolean value);
        partial void OnCanRemoveEmployeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeeMiPaladar
        {
            get
            {
                return _CanSeeMiPaladar;
            }
            set
            {
                OnCanSeeMiPaladarChanging(value);
                ReportPropertyChanging("CanSeeMiPaladar");
                _CanSeeMiPaladar = StructuralObject.SetValidValue(value, "CanSeeMiPaladar");
                ReportPropertyChanged("CanSeeMiPaladar");
                OnCanSeeMiPaladarChanged();
            }
        }
        private global::System.Boolean _CanSeeMiPaladar;
        partial void OnCanSeeMiPaladarChanging(global::System.Boolean value);
        partial void OnCanSeeMiPaladarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanExportImport
        {
            get
            {
                return _CanExportImport;
            }
            set
            {
                OnCanExportImportChanging(value);
                ReportPropertyChanging("CanExportImport");
                _CanExportImport = StructuralObject.SetValidValue(value, "CanExportImport");
                ReportPropertyChanged("CanExportImport");
                OnCanExportImportChanged();
            }
        }
        private global::System.Boolean _CanExportImport;
        partial void OnCanExportImportChanging(global::System.Boolean value);
        partial void OnCanExportImportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeeSalesReport
        {
            get
            {
                return _CanSeeSalesReport;
            }
            set
            {
                OnCanSeeSalesReportChanging(value);
                ReportPropertyChanging("CanSeeSalesReport");
                _CanSeeSalesReport = StructuralObject.SetValidValue(value, "CanSeeSalesReport");
                ReportPropertyChanged("CanSeeSalesReport");
                OnCanSeeSalesReportChanged();
            }
        }
        private global::System.Boolean _CanSeeSalesReport;
        partial void OnCanSeeSalesReportChanging(global::System.Boolean value);
        partial void OnCanSeeSalesReportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeeSalesByItemReport
        {
            get
            {
                return _CanSeeSalesByItemReport;
            }
            set
            {
                OnCanSeeSalesByItemReportChanging(value);
                ReportPropertyChanging("CanSeeSalesByItemReport");
                _CanSeeSalesByItemReport = StructuralObject.SetValidValue(value, "CanSeeSalesByItemReport");
                ReportPropertyChanged("CanSeeSalesByItemReport");
                OnCanSeeSalesByItemReportChanged();
            }
        }
        private global::System.Boolean _CanSeeSalesByItemReport;
        partial void OnCanSeeSalesByItemReportChanging(global::System.Boolean value);
        partial void OnCanSeeSalesByItemReportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeeReports
        {
            get
            {
                return _CanSeeReports;
            }
            set
            {
                OnCanSeeReportsChanging(value);
                ReportPropertyChanging("CanSeeReports");
                _CanSeeReports = StructuralObject.SetValidValue(value, "CanSeeReports");
                ReportPropertyChanged("CanSeeReports");
                OnCanSeeReportsChanged();
            }
        }
        private global::System.Boolean _CanSeeReports;
        partial void OnCanSeeReportsChanging(global::System.Boolean value);
        partial void OnCanSeeReportsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSeeRoles
        {
            get
            {
                return _CanSeeRoles;
            }
            set
            {
                OnCanSeeRolesChanging(value);
                ReportPropertyChanging("CanSeeRoles");
                _CanSeeRoles = StructuralObject.SetValidValue(value, "CanSeeRoles");
                ReportPropertyChanged("CanSeeRoles");
                OnCanSeeRolesChanged();
            }
        }
        private global::System.Boolean _CanSeeRoles;
        partial void OnCanSeeRolesChanging(global::System.Boolean value);
        partial void OnCanSeeRolesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_EmployeesRole", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("RestaurantDBModel.FK_EmployeesRole", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("RestaurantDBModel.FK_EmployeesRole", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Sale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sale : Order
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sale object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="discount">Initial value of the Discount property.</param>
        /// <param name="discountInPercent">Initial value of the DiscountInPercent property.</param>
        /// <param name="cash">Initial value of the Cash property.</param>
        /// <param name="prints">Initial value of the Prints property.</param>
        /// <param name="persons">Initial value of the Persons property.</param>
        /// <param name="paid">Initial value of the Paid property.</param>
        /// <param name="subTotal">Initial value of the SubTotal property.</param>
        /// <param name="total">Initial value of the Total property.</param>
        /// <param name="closed">Initial value of the Closed property.</param>
        /// <param name="tax">Initial value of the Tax property.</param>
        /// <param name="taxInPercent">Initial value of the TaxInPercent property.</param>
        /// <param name="tips">Initial value of the Tips property.</param>
        /// <param name="totalCost">Initial value of the TotalCost property.</param>
        public static Sale CreateSale(global::System.Int32 id, global::System.DateTime date, global::System.DateTime dateCreated, global::System.Decimal discount, global::System.Boolean discountInPercent, global::System.Decimal cash, global::System.Int32 prints, global::System.Int32 persons, global::System.Boolean paid, global::System.Decimal subTotal, global::System.Decimal total, global::System.Boolean closed, global::System.Decimal tax, global::System.Boolean taxInPercent, global::System.Decimal tips, global::System.Decimal totalCost)
        {
            Sale sale = new Sale();
            sale.Id = id;
            sale.Date = date;
            sale.DateCreated = dateCreated;
            sale.Discount = discount;
            sale.DiscountInPercent = discountInPercent;
            sale.Cash = cash;
            sale.Prints = prints;
            sale.Persons = persons;
            sale.Paid = paid;
            sale.SubTotal = subTotal;
            sale.Total = total;
            sale.Closed = closed;
            sale.Tax = tax;
            sale.TaxInPercent = taxInPercent;
            sale.Tips = tips;
            sale.TotalCost = totalCost;
            return sale;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateClosed
        {
            get
            {
                return _DateClosed;
            }
            set
            {
                OnDateClosedChanging(value);
                ReportPropertyChanging("DateClosed");
                _DateClosed = StructuralObject.SetValidValue(value, "DateClosed");
                ReportPropertyChanged("DateClosed");
                OnDateClosedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateClosed;
        partial void OnDateClosedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DatePrinted
        {
            get
            {
                return _DatePrinted;
            }
            set
            {
                OnDatePrintedChanging(value);
                ReportPropertyChanging("DatePrinted");
                _DatePrinted = StructuralObject.SetValidValue(value, "DatePrinted");
                ReportPropertyChanged("DatePrinted");
                OnDatePrintedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DatePrinted;
        partial void OnDatePrintedChanging(Nullable<global::System.DateTime> value);
        partial void OnDatePrintedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value, "Discount");
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private global::System.Decimal _Discount;
        partial void OnDiscountChanging(global::System.Decimal value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DiscountInPercent
        {
            get
            {
                return _DiscountInPercent;
            }
            set
            {
                OnDiscountInPercentChanging(value);
                ReportPropertyChanging("DiscountInPercent");
                _DiscountInPercent = StructuralObject.SetValidValue(value, "DiscountInPercent");
                ReportPropertyChanged("DiscountInPercent");
                OnDiscountInPercentChanged();
            }
        }
        private global::System.Boolean _DiscountInPercent;
        partial void OnDiscountInPercentChanging(global::System.Boolean value);
        partial void OnDiscountInPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cash
        {
            get
            {
                return _Cash;
            }
            set
            {
                OnCashChanging(value);
                ReportPropertyChanging("Cash");
                _Cash = StructuralObject.SetValidValue(value, "Cash");
                ReportPropertyChanged("Cash");
                OnCashChanged();
            }
        }
        private global::System.Decimal _Cash;
        partial void OnCashChanging(global::System.Decimal value);
        partial void OnCashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Prints
        {
            get
            {
                return _Prints;
            }
            set
            {
                OnPrintsChanging(value);
                ReportPropertyChanging("Prints");
                _Prints = StructuralObject.SetValidValue(value, "Prints");
                ReportPropertyChanged("Prints");
                OnPrintsChanged();
            }
        }
        private global::System.Int32 _Prints;
        partial void OnPrintsChanging(global::System.Int32 value);
        partial void OnPrintsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Persons
        {
            get
            {
                return _Persons;
            }
            set
            {
                OnPersonsChanging(value);
                ReportPropertyChanging("Persons");
                _Persons = StructuralObject.SetValidValue(value, "Persons");
                ReportPropertyChanged("Persons");
                OnPersonsChanged();
            }
        }
        private global::System.Int32 _Persons;
        partial void OnPersonsChanging(global::System.Int32 value);
        partial void OnPersonsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Paid
        {
            get
            {
                return _Paid;
            }
            set
            {
                OnPaidChanging(value);
                ReportPropertyChanging("Paid");
                _Paid = StructuralObject.SetValidValue(value, "Paid");
                ReportPropertyChanged("Paid");
                OnPaidChanged();
            }
        }
        private global::System.Boolean _Paid;
        partial void OnPaidChanging(global::System.Boolean value);
        partial void OnPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _Number;
        partial void OnNumberChanging(Nullable<global::System.Int32> value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SubTotal
        {
            get
            {
                return _SubTotal;
            }
            set
            {
                OnSubTotalChanging(value);
                ReportPropertyChanging("SubTotal");
                _SubTotal = StructuralObject.SetValidValue(value, "SubTotal");
                ReportPropertyChanged("SubTotal");
                OnSubTotalChanged();
            }
        }
        private global::System.Decimal _SubTotal;
        partial void OnSubTotalChanging(global::System.Decimal value);
        partial void OnSubTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value, "Total");
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private global::System.Decimal _Total;
        partial void OnTotalChanging(global::System.Decimal value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Closed
        {
            get
            {
                return _Closed;
            }
            set
            {
                OnClosedChanging(value);
                ReportPropertyChanging("Closed");
                _Closed = StructuralObject.SetValidValue(value, "Closed");
                ReportPropertyChanged("Closed");
                OnClosedChanged();
            }
        }
        private global::System.Boolean _Closed;
        partial void OnClosedChanging(global::System.Boolean value);
        partial void OnClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Tax
        {
            get
            {
                return _Tax;
            }
            set
            {
                OnTaxChanging(value);
                ReportPropertyChanging("Tax");
                _Tax = StructuralObject.SetValidValue(value, "Tax");
                ReportPropertyChanged("Tax");
                OnTaxChanged();
            }
        }
        private global::System.Decimal _Tax;
        partial void OnTaxChanging(global::System.Decimal value);
        partial void OnTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TaxInPercent
        {
            get
            {
                return _TaxInPercent;
            }
            set
            {
                OnTaxInPercentChanging(value);
                ReportPropertyChanging("TaxInPercent");
                _TaxInPercent = StructuralObject.SetValidValue(value, "TaxInPercent");
                ReportPropertyChanged("TaxInPercent");
                OnTaxInPercentChanged();
            }
        }
        private global::System.Boolean _TaxInPercent;
        partial void OnTaxInPercentChanging(global::System.Boolean value);
        partial void OnTaxInPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Tips
        {
            get
            {
                return _Tips;
            }
            set
            {
                OnTipsChanging(value);
                ReportPropertyChanging("Tips");
                _Tips = StructuralObject.SetValidValue(value, "Tips");
                ReportPropertyChanged("Tips");
                OnTipsChanged();
            }
        }
        private global::System.Decimal _Tips;
        partial void OnTipsChanging(global::System.Decimal value);
        partial void OnTipsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalCost
        {
            get
            {
                return _TotalCost;
            }
            set
            {
                OnTotalCostChanging(value);
                ReportPropertyChanging("TotalCost");
                _TotalCost = StructuralObject.SetValidValue(value, "TotalCost");
                ReportPropertyChanged("TotalCost");
                OnTotalCostChanged();
            }
        }
        private global::System.Decimal _TotalCost;
        partial void OnTotalCostChanging(global::System.Decimal value);
        partial void OnTotalCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShiftId
        {
            get
            {
                return _ShiftId;
            }
            set
            {
                OnShiftIdChanging(value);
                ReportPropertyChanging("ShiftId");
                _ShiftId = StructuralObject.SetValidValue(value, "ShiftId");
                ReportPropertyChanged("ShiftId");
                OnShiftIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ShiftId;
        partial void OnShiftIdChanging(Nullable<global::System.Int32> value);
        partial void OnShiftIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "SaleTable", "Table")]
        public Table Table
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Table>("RestaurantDBModel.SaleTable", "Table").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Table>("RestaurantDBModel.SaleTable", "Table").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Table> TableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Table>("RestaurantDBModel.SaleTable", "Table");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Table>("RestaurantDBModel.SaleTable", "Table", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_ShiftSale", "Shift")]
        public Shift Shift
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shift>("RestaurantDBModel.FK_ShiftSale", "Shift").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shift>("RestaurantDBModel.FK_ShiftSale", "Shift").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Shift> ShiftReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shift>("RestaurantDBModel.FK_ShiftSale", "Shift");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Shift>("RestaurantDBModel.FK_ShiftSale", "Shift", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="SaleLineItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SaleLineItem : LineItem
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SaleLineItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="printed">Initial value of the Printed property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        public static SaleLineItem CreateSaleLineItem(global::System.Int32 id, global::System.Double quantity, global::System.Decimal amount, global::System.Boolean printed, global::System.Decimal cost)
        {
            SaleLineItem saleLineItem = new SaleLineItem();
            saleLineItem.Id = id;
            saleLineItem.Quantity = quantity;
            saleLineItem.Amount = amount;
            saleLineItem.Printed = printed;
            saleLineItem.Cost = cost;
            return saleLineItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Printed
        {
            get
            {
                return _Printed;
            }
            set
            {
                OnPrintedChanging(value);
                ReportPropertyChanging("Printed");
                _Printed = StructuralObject.SetValidValue(value, "Printed");
                ReportPropertyChanged("Printed");
                OnPrintedChanged();
            }
        }
        private global::System.Boolean _Printed;
        partial void OnPrintedChanging(global::System.Boolean value);
        partial void OnPrintedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value, "Cost");
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Shift")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shift : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Shift object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Shift CreateShift(global::System.Int32 id, global::System.String name)
        {
            Shift shift = new Shift();
            shift.Id = id;
            shift.Name = name;
            return shift;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_ShiftSale", "Sale")]
        public EntityCollection<Sale> Orders_Sale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sale>("RestaurantDBModel.FK_ShiftSale", "Sale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sale>("RestaurantDBModel.FK_ShiftSale", "Sale", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Table")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Table : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Table object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="capacity">Initial value of the Capacity property.</param>
        /// <param name="isBar">Initial value of the IsBar property.</param>
        public static Table CreateTable(global::System.Int32 id, global::System.Int32 number, global::System.Int32 capacity, global::System.Boolean isBar)
        {
            Table table = new Table();
            table.Id = id;
            table.Number = number;
            table.Capacity = capacity;
            table.IsBar = isBar;
            return table;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value, "Capacity");
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.Int32 _Capacity;
        partial void OnCapacityChanging(global::System.Int32 value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                OnAreaIdChanging(value);
                ReportPropertyChanging("AreaId");
                _AreaId = StructuralObject.SetValidValue(value, "AreaId");
                ReportPropertyChanged("AreaId");
                OnAreaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AreaId;
        partial void OnAreaIdChanging(Nullable<global::System.Int32> value);
        partial void OnAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBar
        {
            get
            {
                return _IsBar;
            }
            set
            {
                OnIsBarChanging(value);
                ReportPropertyChanging("IsBar");
                _IsBar = StructuralObject.SetValidValue(value, "IsBar");
                ReportPropertyChanged("IsBar");
                OnIsBarChanged();
            }
        }
        private global::System.Boolean _IsBar;
        partial void OnIsBarChanging(global::System.Boolean value);
        partial void OnIsBarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_Tables_PriceLists", "PriceList")]
        public PriceList PriceList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PriceList>("RestaurantDBModel.FK_Tables_PriceLists", "PriceList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PriceList>("RestaurantDBModel.FK_Tables_PriceLists", "PriceList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PriceList> PriceListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PriceList>("RestaurantDBModel.FK_Tables_PriceLists", "PriceList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PriceList>("RestaurantDBModel.FK_Tables_PriceLists", "PriceList", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="Transfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transfer : Order
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transfer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Transfer CreateTransfer(global::System.Int32 id, global::System.DateTime date, global::System.DateTime dateCreated)
        {
            Transfer transfer = new Transfer();
            transfer.Id = id;
            transfer.Date = date;
            transfer.DateCreated = dateCreated;
            return transfer;
        }

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "TransferFromInventory", "Inventory")]
        public Inventory InventoryFrom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.TransferFromInventory", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.TransferFromInventory", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryFromReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.TransferFromInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("RestaurantDBModel.TransferFromInventory", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "TransferToInventory", "Inventory")]
        public Inventory InventoryTo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.TransferToInventory", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.TransferToInventory", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryToReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("RestaurantDBModel.TransferToInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("RestaurantDBModel.TransferToInventory", "Inventory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="TransferItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransferItem : LineItem
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransferItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        public static TransferItem CreateTransferItem(global::System.Int32 id, global::System.Double quantity, global::System.Decimal cost)
        {
            TransferItem transferItem = new TransferItem();
            transferItem.Id = id;
            transferItem.Quantity = quantity;
            transferItem.Cost = cost;
            return transferItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value, "Cost");
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="UMFamily")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UMFamily : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UMFamily object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UMFamily CreateUMFamily(global::System.Int32 id, global::System.String name)
        {
            UMFamily uMFamily = new UMFamily();
            uMFamily.Id = id;
            uMFamily.Name = name;
            return uMFamily;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_UMFamilyProduct", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("RestaurantDBModel.FK_UMFamilyProduct", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("RestaurantDBModel.FK_UMFamilyProduct", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_UnitMeasures_UMFamilies", "UnitMeasure")]
        public EntityCollection<UnitMeasure> UnitMeasures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnitMeasure>("RestaurantDBModel.FK_UnitMeasures_UMFamilies", "UnitMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnitMeasure>("RestaurantDBModel.FK_UnitMeasures_UMFamilies", "UnitMeasure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RestaurantDBModel", Name="UnitMeasure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnitMeasure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnitMeasure object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="caption">Initial value of the Caption property.</param>
        /// <param name="uMFamilyId">Initial value of the UMFamilyId property.</param>
        /// <param name="isFamilyBase">Initial value of the IsFamilyBase property.</param>
        /// <param name="toBaseConversion">Initial value of the ToBaseConversion property.</param>
        public static UnitMeasure CreateUnitMeasure(global::System.Int32 id, global::System.String caption, global::System.Int32 uMFamilyId, global::System.Boolean isFamilyBase, global::System.Double toBaseConversion)
        {
            UnitMeasure unitMeasure = new UnitMeasure();
            unitMeasure.Id = id;
            unitMeasure.Caption = caption;
            unitMeasure.UMFamilyId = uMFamilyId;
            unitMeasure.IsFamilyBase = isFamilyBase;
            unitMeasure.ToBaseConversion = toBaseConversion;
            return unitMeasure;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, false, "Caption");
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UMFamilyId
        {
            get
            {
                return _UMFamilyId;
            }
            set
            {
                OnUMFamilyIdChanging(value);
                ReportPropertyChanging("UMFamilyId");
                _UMFamilyId = StructuralObject.SetValidValue(value, "UMFamilyId");
                ReportPropertyChanged("UMFamilyId");
                OnUMFamilyIdChanged();
            }
        }
        private global::System.Int32 _UMFamilyId;
        partial void OnUMFamilyIdChanging(global::System.Int32 value);
        partial void OnUMFamilyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFamilyBase
        {
            get
            {
                return _IsFamilyBase;
            }
            set
            {
                OnIsFamilyBaseChanging(value);
                ReportPropertyChanging("IsFamilyBase");
                _IsFamilyBase = StructuralObject.SetValidValue(value, "IsFamilyBase");
                ReportPropertyChanged("IsFamilyBase");
                OnIsFamilyBaseChanged();
            }
        }
        private global::System.Boolean _IsFamilyBase;
        partial void OnIsFamilyBaseChanging(global::System.Boolean value);
        partial void OnIsFamilyBaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ToBaseConversion
        {
            get
            {
                return _ToBaseConversion;
            }
            set
            {
                OnToBaseConversionChanging(value);
                ReportPropertyChanging("ToBaseConversion");
                _ToBaseConversion = StructuralObject.SetValidValue(value, "ToBaseConversion");
                ReportPropertyChanged("ToBaseConversion");
                OnToBaseConversionChanged();
            }
        }
        private global::System.Double _ToBaseConversion;
        partial void OnToBaseConversionChanging(global::System.Double value);
        partial void OnToBaseConversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RestaurantDBModel", "FK_UnitMeasures_UMFamilies", "UMFamily")]
        public UMFamily UMFamily
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UMFamily>("RestaurantDBModel.FK_UnitMeasures_UMFamilies", "UMFamily").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UMFamily>("RestaurantDBModel.FK_UnitMeasures_UMFamilies", "UMFamily").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UMFamily> UMFamilyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UMFamily>("RestaurantDBModel.FK_UnitMeasures_UMFamilies", "UMFamily");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UMFamily>("RestaurantDBModel.FK_UnitMeasures_UMFamilies", "UMFamily", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
